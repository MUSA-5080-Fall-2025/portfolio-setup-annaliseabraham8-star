[
  {
    "objectID": "weekly-notes/week-01-notes.html",
    "href": "weekly-notes/week-01-notes.html",
    "title": "Week 1 Notes - Course Introduction",
    "section": "",
    "text": "• Tidyverse presents data as ‘tibbles’ – presents better\nit Uses data_\nR presents data as data frames\nUses data.\nSelect1 &lt;- select(car_data, column1, column2….)\nMutate(car_data, price_k = Price / 1000)\nFilter(car_data, Price &gt; 2000)\nRename – to rename columns"
  },
  {
    "objectID": "weekly-notes/week-01-notes.html#key-concepts-learned",
    "href": "weekly-notes/week-01-notes.html#key-concepts-learned",
    "title": "Week 1 Notes - Course Introduction",
    "section": "",
    "text": "• Tidyverse presents data as ‘tibbles’ – presents better\nit Uses data_\nR presents data as data frames\nUses data.\nSelect1 &lt;- select(car_data, column1, column2….)\nMutate(car_data, price_k = Price / 1000)\nFilter(car_data, Price &gt; 2000)\nRename – to rename columns"
  },
  {
    "objectID": "weekly-notes/week-01-notes.html#coding-techniques",
    "href": "weekly-notes/week-01-notes.html#coding-techniques",
    "title": "Week 1 Notes - Course Introduction",
    "section": "Coding Techniques",
    "text": "Coding Techniques\n\n[New R functions or approaches]\n[Quarto features learned]"
  },
  {
    "objectID": "weekly-notes/week-01-notes.html#questions-challenges",
    "href": "weekly-notes/week-01-notes.html#questions-challenges",
    "title": "Week 1 Notes - Course Introduction",
    "section": "Questions & Challenges",
    "text": "Questions & Challenges\n\n[What I didn’t fully understand]\n[Areas needing more practice]"
  },
  {
    "objectID": "weekly-notes/week-01-notes.html#connections-to-policy",
    "href": "weekly-notes/week-01-notes.html#connections-to-policy",
    "title": "Week 1 Notes - Course Introduction",
    "section": "Connections to Policy",
    "text": "Connections to Policy\n\n[How this week’s content applies to real policy work]"
  },
  {
    "objectID": "weekly-notes/week-01-notes.html#reflection",
    "href": "weekly-notes/week-01-notes.html#reflection",
    "title": "Week 1 Notes - Course Introduction",
    "section": "Reflection",
    "text": "Reflection\n\n[What was most interesting]\n[How I’ll apply this knowledge]"
  },
  {
    "objectID": "instructions_week1.html",
    "href": "instructions_week1.html",
    "title": "Portfolio Setup Instructions",
    "section": "",
    "text": "Welcome to MUSA 5080! This guide will help you set up your personal portfolio repository for the semester.\n\n\nBy the end of this setup, you’ll have: - Your own portfolio repository on GitHub - live website showcasing your work - A place to document your learning journey\n\n\n\n\nThis is what you are building: Dr. Delmelle’s sample portfolio\n\n\n\n\nBefore starting, make sure you have: - [ ] A GitHub account (create one here if needed) - [ ] Quarto installed on your computer (download here) - [ ] R and RStudio installed\n\n\n\n\n\nYou should already be in your personal repository (created when you accepted the GitHub Classroom assignment). Now let’s personalize it!\n\n\n\nClick on the _quarto.yml file\nClick the pencil icon (✏️) to edit\nChange \"Your Name - MUSA 5080 Portfolio\" to include your actual name\nExample: \"Jane Smith - MUSA 5080 Portfolio\"\nClick “Commit changes” at the bottom\n\n\n\n\n\nClick on the index.qmd file\nClick the pencil icon (✏️) to edit\nUpdate the “About Me” section with your information:\n\nYour name and background\nYour email address\nYour GitHub username\nWhy you’re taking this course\n\nClick “Commit changes”\n\n\n\n\n\nNavigate to the weekly-notes folder\nClick on week-01-notes.qmd\nClick the pencil icon (✏️) to edit\nFill in your notes from the first class\nClick “Commit changes”\n\n\n\n\n\nThis step makes your portfolio visible as a live website!\n\nGo to Settings: Click the “Settings” tab at the top of your repository\nFind Pages: Scroll down and click “Pages” in the left sidebar\nConfigure Source:\n\nSource: Select “Deploy from a branch”\nBranch: Select “main”\nFolder: Select “/ docs”\n\nSave: Click “Save”\nWait: GitHub will show a message that your site is being built (this takes 1-5 minutes)\n\n\n\n\n\nFind Your URL: After a few minutes, GitHub will show your website URL at the top of the Pages settings\n\nIt will look like: https://yourusername.github.io/repository-name\n\nVisit Your Site: Click the link to see your live portfolio!\nBookmark It: Save this URL - you’ll submit it to Canvas\n\n\n\n\n\nCopy your live website URL\nGo to the Canvas assignment\nSubmit your URL\n\n\n\n\n\nIf you want to work on your computer and see changes before publishing:\n\n\n# Replace [your-repo-url] with your actual repository URL\ngit clone [your-repo-url]\ncd [your-repository-name]\n\n\n\n# Edit your files using RStudio\n# Preview your changes:\nquarto render\nquarto preview\n\n# When ready, save your changes:\ngit add .\ngit commit -m \"Update portfolio\"\ngit push\nYour live website will automatically update when you push changes!\n\n\n\n\nEach week you’ll: 1. Create a new file: weekly-notes/week-XX-notes.qmd 2. Copy the template from week-01-notes.qmd 3. Fill in your reflections and key concepts 4. Commit and push your changes\n\n\n\n\n\n\nWait longer: GitHub Pages can take up to 10 minutes to build\nCheck Actions tab: Look for any red X marks indicating build failures\nVerify Pages settings: Make sure you selected “main” branch and “/docs” folder\n\n\n\n\n\nCheck permissions: Make sure you’re in YOUR repository, not the template\nSign in: Ensure you’re signed into GitHub\n\n\n\n\n\nCheck YAML syntax: Make sure your _quarto.yml file has proper formatting\nVerify file names: Files should end in .qmd not .md\nLook at error messages: The Actions tab will show specific error details\n\n\n\n\n\nDon’t panic! Every change is tracked in Git\nSee history: Click the “History” button on any file to see previous versions\nRevert changes: You can always go back to a previous version\n\n\n\n\n\n\nCommit often: Save your work frequently with descriptive commit messages\nUse branches: For major changes, create a new branch and merge when ready\nPreview locally: Use quarto preview to see changes before publishing\nKeep it professional: This portfolio can be shared with future employers!\nDocument everything: Good documentation is as important as good analysis\n\n\n\n\n\nQuarto Documentation\nGitHub Docs\nMarkdown Guide\nGit Tutorial\n\n\n\n\nDuring Class: - Raise your hand for immediate help - Work with classmates - collaboration is encouraged for setup!\nOutside Class: - Office Hours: Mondays 1:30-3:00 PM - Email: delmelle@design.upenn.edu - GitHub Issues: Create an issue in your repository for technical problems - Canvas Discussion: Post questions others might have too\n\n\n\nBefore submitting, make sure you’ve: - [ ] Customized _quarto.yml with your name - [ ] Updated index.qmd with your information - [ ] Completed Week 1 notes - [ ] Enabled GitHub Pages - [ ] Verified your website loads correctly - [ ] Submitted your URL to Canvas\n\nNeed help? Don’t struggle alone - reach out during office hours (mine + TAs) or in class!"
  },
  {
    "objectID": "instructions_week1.html#what-youre-building",
    "href": "instructions_week1.html#what-youre-building",
    "title": "Portfolio Setup Instructions",
    "section": "",
    "text": "By the end of this setup, you’ll have: - Your own portfolio repository on GitHub - live website showcasing your work - A place to document your learning journey"
  },
  {
    "objectID": "instructions_week1.html#example",
    "href": "instructions_week1.html#example",
    "title": "Portfolio Setup Instructions",
    "section": "",
    "text": "This is what you are building: Dr. Delmelle’s sample portfolio"
  },
  {
    "objectID": "instructions_week1.html#prerequisites",
    "href": "instructions_week1.html#prerequisites",
    "title": "Portfolio Setup Instructions",
    "section": "",
    "text": "Before starting, make sure you have: - [ ] A GitHub account (create one here if needed) - [ ] Quarto installed on your computer (download here) - [ ] R and RStudio installed"
  },
  {
    "objectID": "instructions_week1.html#step-by-step-setup",
    "href": "instructions_week1.html#step-by-step-setup",
    "title": "Portfolio Setup Instructions",
    "section": "",
    "text": "You should already be in your personal repository (created when you accepted the GitHub Classroom assignment). Now let’s personalize it!\n\n\n\nClick on the _quarto.yml file\nClick the pencil icon (✏️) to edit\nChange \"Your Name - MUSA 5080 Portfolio\" to include your actual name\nExample: \"Jane Smith - MUSA 5080 Portfolio\"\nClick “Commit changes” at the bottom\n\n\n\n\n\nClick on the index.qmd file\nClick the pencil icon (✏️) to edit\nUpdate the “About Me” section with your information:\n\nYour name and background\nYour email address\nYour GitHub username\nWhy you’re taking this course\n\nClick “Commit changes”\n\n\n\n\n\nNavigate to the weekly-notes folder\nClick on week-01-notes.qmd\nClick the pencil icon (✏️) to edit\nFill in your notes from the first class\nClick “Commit changes”\n\n\n\n\n\nThis step makes your portfolio visible as a live website!\n\nGo to Settings: Click the “Settings” tab at the top of your repository\nFind Pages: Scroll down and click “Pages” in the left sidebar\nConfigure Source:\n\nSource: Select “Deploy from a branch”\nBranch: Select “main”\nFolder: Select “/ docs”\n\nSave: Click “Save”\nWait: GitHub will show a message that your site is being built (this takes 1-5 minutes)\n\n\n\n\n\nFind Your URL: After a few minutes, GitHub will show your website URL at the top of the Pages settings\n\nIt will look like: https://yourusername.github.io/repository-name\n\nVisit Your Site: Click the link to see your live portfolio!\nBookmark It: Save this URL - you’ll submit it to Canvas\n\n\n\n\n\nCopy your live website URL\nGo to the Canvas assignment\nSubmit your URL"
  },
  {
    "objectID": "instructions_week1.html#working-on-your-portfolio-locally-optional-but-recommended",
    "href": "instructions_week1.html#working-on-your-portfolio-locally-optional-but-recommended",
    "title": "Portfolio Setup Instructions",
    "section": "",
    "text": "If you want to work on your computer and see changes before publishing:\n\n\n# Replace [your-repo-url] with your actual repository URL\ngit clone [your-repo-url]\ncd [your-repository-name]\n\n\n\n# Edit your files using RStudio\n# Preview your changes:\nquarto render\nquarto preview\n\n# When ready, save your changes:\ngit add .\ngit commit -m \"Update portfolio\"\ngit push\nYour live website will automatically update when you push changes!"
  },
  {
    "objectID": "instructions_week1.html#weekly-workflow",
    "href": "instructions_week1.html#weekly-workflow",
    "title": "Portfolio Setup Instructions",
    "section": "",
    "text": "Each week you’ll: 1. Create a new file: weekly-notes/week-XX-notes.qmd 2. Copy the template from week-01-notes.qmd 3. Fill in your reflections and key concepts 4. Commit and push your changes"
  },
  {
    "objectID": "instructions_week1.html#troubleshooting",
    "href": "instructions_week1.html#troubleshooting",
    "title": "Portfolio Setup Instructions",
    "section": "",
    "text": "Wait longer: GitHub Pages can take up to 10 minutes to build\nCheck Actions tab: Look for any red X marks indicating build failures\nVerify Pages settings: Make sure you selected “main” branch and “/docs” folder\n\n\n\n\n\nCheck permissions: Make sure you’re in YOUR repository, not the template\nSign in: Ensure you’re signed into GitHub\n\n\n\n\n\nCheck YAML syntax: Make sure your _quarto.yml file has proper formatting\nVerify file names: Files should end in .qmd not .md\nLook at error messages: The Actions tab will show specific error details\n\n\n\n\n\nDon’t panic! Every change is tracked in Git\nSee history: Click the “History” button on any file to see previous versions\nRevert changes: You can always go back to a previous version"
  },
  {
    "objectID": "instructions_week1.html#pro-tips",
    "href": "instructions_week1.html#pro-tips",
    "title": "Portfolio Setup Instructions",
    "section": "",
    "text": "Commit often: Save your work frequently with descriptive commit messages\nUse branches: For major changes, create a new branch and merge when ready\nPreview locally: Use quarto preview to see changes before publishing\nKeep it professional: This portfolio can be shared with future employers!\nDocument everything: Good documentation is as important as good analysis"
  },
  {
    "objectID": "instructions_week1.html#additional-resources",
    "href": "instructions_week1.html#additional-resources",
    "title": "Portfolio Setup Instructions",
    "section": "",
    "text": "Quarto Documentation\nGitHub Docs\nMarkdown Guide\nGit Tutorial"
  },
  {
    "objectID": "instructions_week1.html#getting-help",
    "href": "instructions_week1.html#getting-help",
    "title": "Portfolio Setup Instructions",
    "section": "",
    "text": "During Class: - Raise your hand for immediate help - Work with classmates - collaboration is encouraged for setup!\nOutside Class: - Office Hours: Mondays 1:30-3:00 PM - Email: delmelle@design.upenn.edu - GitHub Issues: Create an issue in your repository for technical problems - Canvas Discussion: Post questions others might have too"
  },
  {
    "objectID": "instructions_week1.html#checklist",
    "href": "instructions_week1.html#checklist",
    "title": "Portfolio Setup Instructions",
    "section": "",
    "text": "Before submitting, make sure you’ve: - [ ] Customized _quarto.yml with your name - [ ] Updated index.qmd with your information - [ ] Completed Week 1 notes - [ ] Enabled GitHub Pages - [ ] Verified your website loads correctly - [ ] Submitted your URL to Canvas\n\nNeed help? Don’t struggle alone - reach out during office hours (mine + TAs) or in class!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MUSA 5080 Portfolio",
    "section": "",
    "text": "This portfolio documents my learning journey in Public Policy Analytics (MUSA 5080).\n\n\nAdvanced spatial analysis and data science for urban planning and public policy.\n\n\n\n\nWeekly Notes: My learning reflections and key concepts\nLabs: Completed assignments and analyses\nFinal Project: Capstone modeling challenge\n\n\n\n\nI’m a second year Master of City Planning student at the Weitzman School of Design. I’m taking this course to strengthen my data and modeling skills.\n\n\n\n\nEmail: [ama88@upenn.edu]\nGitHub: [@annaliseabraham8-star]"
  },
  {
    "objectID": "index.html#about-this-course",
    "href": "index.html#about-this-course",
    "title": "MUSA 5080 Portfolio",
    "section": "",
    "text": "Advanced spatial analysis and data science for urban planning and public policy."
  },
  {
    "objectID": "index.html#portfolio-structure",
    "href": "index.html#portfolio-structure",
    "title": "MUSA 5080 Portfolio",
    "section": "",
    "text": "Weekly Notes: My learning reflections and key concepts\nLabs: Completed assignments and analyses\nFinal Project: Capstone modeling challenge"
  },
  {
    "objectID": "index.html#about-me",
    "href": "index.html#about-me",
    "title": "MUSA 5080 Portfolio",
    "section": "",
    "text": "I’m a second year Master of City Planning student at the Weitzman School of Design. I’m taking this course to strengthen my data and modeling skills."
  },
  {
    "objectID": "index.html#contact",
    "href": "index.html#contact",
    "title": "MUSA 5080 Portfolio",
    "section": "",
    "text": "Email: [ama88@upenn.edu]\nGitHub: [@annaliseabraham8-star]"
  },
  {
    "objectID": "labs/lab1/assignment1_template.html",
    "href": "labs/lab1/assignment1_template.html",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "",
    "text": "You are a data analyst for the PA Department of Human Services. The department is considering implementing an algorithmic system to identify communities that should receive priority for social service funding and outreach programs. Your supervisor has asked you to evaluate the quality and reliability of available census data to inform this decision.\nDrawing on our Week 2 discussion of algorithmic bias, you need to assess not just what the data shows, but how reliable it is and what communities might be affected by data quality issues.\n\n\n\n\nApply dplyr functions to real census data for policy analysis\nEvaluate data quality using margins of error\nConnect technical analysis to algorithmic decision-making\nIdentify potential equity implications of data reliability issues\nCreate professional documentation for policy stakeholders\n\n\n\n\nSubmit by posting your updated portfolio link on Canvas. Your assignment should be accessible at your-portfolio-url/assignments/assignment_1/\nMake sure to update your _quarto.yml navigation to include this assignment under an “Assignments” menu."
  },
  {
    "objectID": "labs/lab1/assignment1_template.html#scenario",
    "href": "labs/lab1/assignment1_template.html#scenario",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "",
    "text": "You are a data analyst for the PA Department of Human Services. The department is considering implementing an algorithmic system to identify communities that should receive priority for social service funding and outreach programs. Your supervisor has asked you to evaluate the quality and reliability of available census data to inform this decision.\nDrawing on our Week 2 discussion of algorithmic bias, you need to assess not just what the data shows, but how reliable it is and what communities might be affected by data quality issues."
  },
  {
    "objectID": "labs/lab1/assignment1_template.html#learning-objectives",
    "href": "labs/lab1/assignment1_template.html#learning-objectives",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "",
    "text": "Apply dplyr functions to real census data for policy analysis\nEvaluate data quality using margins of error\nConnect technical analysis to algorithmic decision-making\nIdentify potential equity implications of data reliability issues\nCreate professional documentation for policy stakeholders"
  },
  {
    "objectID": "labs/lab1/assignment1_template.html#submission-instructions",
    "href": "labs/lab1/assignment1_template.html#submission-instructions",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "",
    "text": "Submit by posting your updated portfolio link on Canvas. Your assignment should be accessible at your-portfolio-url/assignments/assignment_1/\nMake sure to update your _quarto.yml navigation to include this assignment under an “Assignments” menu."
  },
  {
    "objectID": "labs/lab1/assignment1_template.html#data-retrieval",
    "href": "labs/lab1/assignment1_template.html#data-retrieval",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "2.1 Data Retrieval",
    "text": "2.1 Data Retrieval\nYour Task: Use get_acs() to retrieve county-level data for your chosen state.\nRequirements: - Geography: county level - Variables: median household income (B19013_001) and total population (B01003_001)\n- Year: 2022 - Survey: acs5 - Output format: wide\nHint: Remember to give your variables descriptive names using the variables = c(name = \"code\") syntax.\n\n# Write your get_acs() code here\n\npa_data &lt;- get_acs(\n  geography = \"county\",\n  variables = c(\n    total_pop = \"B01003_001\",\n    median_income = \"B19013_001\"\n  ),\n  state = \"PA\",\n  year = 2022,\n  output = \"wide\"  # Makes analysis easier\n)\n\n# Clean the county names to remove state name and \"County\" \n# Hint: use mutate() with str_remove()\n\npa_data &lt;- pa_data %&gt;%\n  mutate(\n    NAME = str_remove(NAME, \", Pennsylvania\"),  # remove state name\n    NAME = str_remove(NAME, \" County\")          # remove \"County\"\n  )\n\n# Display the first few rows"
  },
  {
    "objectID": "labs/lab1/assignment1_template.html#data-quality-assessment",
    "href": "labs/lab1/assignment1_template.html#data-quality-assessment",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "2.2 Data Quality Assessment",
    "text": "2.2 Data Quality Assessment\nYour Task: Calculate margin of error percentages and create reliability categories.\nRequirements: - Calculate MOE percentage: (margin of error / estimate) * 100 - Create reliability categories: - High Confidence: MOE &lt; 5% - Moderate Confidence: MOE 5-10%\n- Low Confidence: MOE &gt; 10% - Create a flag for unreliable estimates (MOE &gt; 10%)\nHint: Use mutate() with case_when() for the categories.\n\npaa_data_alt &lt;- pa_data %&gt;%\n  mutate(\n    moe_pct = (median_incomeM / median_incomeE) * 100,\n    reliability = case_when(\n      moe_pct &lt; 5 ~ \"High Confidence\",\n      moe_pct &gt;= 5 & moe_pct &lt;= 10 ~ \"Moderate Confidence\",\n      moe_pct &gt; 10 ~ \"Low Confidence\"\n    ),\n    unreliable_flag = moe_pct &gt; 10\n  )\n\nls()\n\n[1] \"pa_data\"      \"paa_data_alt\"\n\n# Calculate MOE percentage and reliability categories using mutate()\n\n# Create a summary showing count of counties in each reliability category\n# Hint: use count() and mutate() to add percentages\n\n\n\nreliability_summary &lt;- paa_data_alt %&gt;%\n  count(reliability) %&gt;%\n  mutate(\n    pct = n / sum(n) * 100\n  )\n  \nls()\n\n[1] \"pa_data\"             \"paa_data_alt\"        \"reliability_summary\""
  },
  {
    "objectID": "labs/lab1/assignment1_template.html#high-uncertainty-counties",
    "href": "labs/lab1/assignment1_template.html#high-uncertainty-counties",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "2.3 High Uncertainty Counties",
    "text": "2.3 High Uncertainty Counties\n“Your Task: Identify the 5 counties with the highest MOE percentages.”\n“Requirements: - Sort by MOE percentage (highest first) - Select the top 5 counties - Display: county name, median income, margin of error, MOE percentage, reliability category - Format as a professional table using kable()\nHint: Use arrange(), slice(), and select() functions.\n\n# Create table of top 5 counties by MOE percentage\n\ntop5_moe &lt;- paa_data_alt %&gt;%\n  arrange(desc(moe_pct)) %&gt;%\n  slice_head(n = 5) %&gt;%\n  select(\n    County = NAME,\n    \"Median Income\" = median_incomeE,\n    \"Margin of Error\" = median_incomeM,\n    \"MOE %\" = moe_pct,\n    Reliability = reliability\n  )\n\n\n# Format as table with kable() - include appropriate column names and caption\n\nkable(\n  top5_moe,\n  caption = \"Top 5 Counties with Highest MOE Percentages\",\n  digits = 1,\n  format.args = list(big.mark = \",\")\n)\n\n\nTop 5 Counties with Highest MOE Percentages\n\n\nCounty\nMedian Income\nMargin of Error\nMOE %\nReliability\n\n\n\n\nForest\n46,188\n4,612\n10.0\nModerate Confidence\n\n\nSullivan\n62,910\n5,821\n9.3\nModerate Confidence\n\n\nUnion\n64,914\n4,753\n7.3\nModerate Confidence\n\n\nMontour\n72,626\n5,146\n7.1\nModerate Confidence\n\n\nElk\n61,672\n4,091\n6.6\nModerate Confidence\n\n\n\n\n\nData Quality Commentary:\n[Write 2-3 sentences explaining what these results mean for algorithmic decision-making. Consider: Which counties might be poorly served by algorithms that rely on this income data? What factors might contribute to higher uncertainty? - Counties with lower confidence levels have less reliable data. A large range in the median income values or a small sample size could lead to higher levels of uncertainty.]”"
  },
  {
    "objectID": "labs/lab1/assignment1_template.html#focus-area-selection",
    "href": "labs/lab1/assignment1_template.html#focus-area-selection",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "3.1 Focus Area Selection",
    "text": "3.1 Focus Area Selection\n“Your Task: Select 2-3 counties from your reliability analysis for detailed tract-level study.”\n“Strategy: Choose counties that represent different reliability levels (e.g., 1 high confidence, 1 moderate, 1 low confidence) to compare how data quality varies.”"
  },
  {
    "objectID": "labs/lab1/assignment1_template.html#tract-level-demographics",
    "href": "labs/lab1/assignment1_template.html#tract-level-demographics",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "3.2 Tract-Level Demographics",
    "text": "3.2 Tract-Level Demographics\nYour Task: Get demographic data for census tracts in your selected counties.\nRequirements: - Geography: tract level - Variables: white alone (B03002_003), Black/African American (B03002_004), Hispanic/Latino (B03002_012), total population (B03002_001) - Use the same state and year as before - Output format: wide - Challenge: You’ll need county codes, not names. Look at the GEOID patterns in your county data for hints.”\n\n# Define your race/ethnicity variables with descriptive names\n\n# Use get_acs() to retrieve tract-level data\n# Hint: You may need to specify county codes in the county parameter\n\n# Calculate percentage of each group using mutate()\n# Create percentages for white, Black, and Hispanic populations\n\n# Add readable tract and county name columns using str_extract() or similar\n\n\nlibrary(stringr)\n\nrace_vars &lt;- c(\n  total_pop = \"B03002_001\",\n  white_alone = \"B03002_003\",\n  black_alone = \"B03002_004\",\n  hispanic = \"B03002_012\"\n)\n\n# get tracts for Allegheny County (003) and Forest County (053) in PA\ntract_demographics &lt;- get_acs(\n  geography = \"tract\",\n  state = \"42\",             # Pennsylvania FIPS\n  county = c(\"003\", \"053\"), # county codes\n  variables = race_vars,\n  year = 2022,              # use same year as before\n  survey = \"acs5\",\n  output = \"wide\"\n) %&gt;%\n  # Calculate percentages\n  mutate(\n    pct_white = 100 * white_aloneE / total_popE,\n    pct_black = 100 * black_aloneE / total_popE,\n    pct_hispanic = 100 * hispanicE / total_popE\n  ) %&gt;%\n  # Extract readable county and tract codes from GEOID\n  mutate(\n    state_fips = str_sub(GEOID, 1, 2),\n    county_fips = str_sub(GEOID, 3, 5),\n    tract_code = str_sub(GEOID, 6, 11)\n  )"
  },
  {
    "objectID": "labs/lab1/assignment1_template.html#demographic-analysis",
    "href": "labs/lab1/assignment1_template.html#demographic-analysis",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "3.3 Demographic Analysis",
    "text": "3.3 Demographic Analysis\nYour Task: Analyze the demographic patterns in your selected areas.\n\n# Find the tract with the highest percentage of Hispanic/Latino residents\n# Hint: use arrange() and slice() to get the top tract\n\ntop_hispanic_tract &lt;- tract_demographics %&gt;%\n  arrange(desc(pct_hispanic)) %&gt;%\n  slice(1) %&gt;%\n  select(NAME, pct_white, pct_black, pct_hispanic)\n\n# Calculate average demographics by county using group_by() and summarize()\n# Show: number of tracts, average percentage for each racial/ethnic group\n\ncounty_summary &lt;- tract_demographics %&gt;%\n  group_by(county_fips) %&gt;%   # use county code\n  summarize(\n    n_tracts = n(),\n    avg_pct_white = mean(pct_white, na.rm = TRUE),\n    avg_pct_black = mean(pct_black, na.rm = TRUE),\n    avg_pct_hispanic = mean(pct_hispanic, na.rm = TRUE)\n  ) %&gt;%\n  ungroup()\n\n# Create a nicely formatted table of your results using kable()\n\ncounty_summary %&gt;%\n  kable(digits = 1, caption = \"Average Demographics by County (ACS 2022 5-year)\")\n\n\nAverage Demographics by County (ACS 2022 5-year)\n\n\ncounty_fips\nn_tracts\navg_pct_white\navg_pct_black\navg_pct_hispanic\n\n\n\n\n003\n394\n74.5\n15.4\n2.4\n\n\n053\n2\n71.2\n13.6\n7.4"
  },
  {
    "objectID": "labs/lab1/assignment1_template.html#moe-analysis-for-demographic-variables",
    "href": "labs/lab1/assignment1_template.html#moe-analysis-for-demographic-variables",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "4.1 MOE Analysis for Demographic Variables",
    "text": "4.1 MOE Analysis for Demographic Variables\nYour Task: Examine margins of error for demographic variables to see if some communities have less reliable data.\nRequirements: - Calculate MOE percentages for each demographic variable - Flag tracts where any demographic variable has MOE &gt; 15% - Create summary statistics\n\n# Calculate MOE percentages for white, Black, and Hispanic variables\n# Hint: use the same formula as before (margin/estimate * 100)\n\n# Create a flag for tracts with high MOE on any demographic variable\n# Use logical operators (| for OR) in an ifelse() statement\n\n# Create summary statistics showing how many tracts have data quality issues\n\ndemographic_moe &lt;- tract_demographics %&gt;%\n  # 1. Calculate MOE percentages\n  mutate(\n    moe_white = 100 * white_aloneM / white_aloneE,\n    moe_black = 100 * black_aloneM / black_aloneE,\n    moe_hispanic = 100 * hispanicM / hispanicE\n  ) %&gt;%\n  # 2. Replace Inf with NA\n  mutate(\n    across(starts_with(\"moe_\"), ~ ifelse(is.infinite(.), NA, .))\n  ) %&gt;%\n  # 3. Flag high MOE tracts (any variable &gt; 15%)\n  mutate(\n    high_moe_flag = ifelse(\n      moe_white &gt; 15 | moe_black &gt; 15 | moe_hispanic &gt; 15,\n      TRUE, FALSE\n    )\n  )\n\n# 3. Summary statistics\nmoe_summary &lt;- demographic_moe %&gt;%\n  summarize(\n    total_tracts = n(),\n    tracts_high_moe = sum(high_moe_flag, na.rm = TRUE),\n    pct_high_moe = 100 * tracts_high_moe / total_tracts,\n    avg_moe_white = mean(moe_white, na.rm = TRUE),\n    avg_moe_black = mean(moe_black, na.rm = TRUE),\n    avg_moe_hispanic = mean(moe_hispanic, na.rm = TRUE)\n  )"
  },
  {
    "objectID": "labs/lab1/assignment1_template.html#pattern-analysis",
    "href": "labs/lab1/assignment1_template.html#pattern-analysis",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "4.2 Pattern Analysis",
    "text": "4.2 Pattern Analysis\n“Your Task: Investigate whether data quality problems are randomly distributed or concentrated in certain types of communities.”\n\n# Group tracts by whether they have high MOE issues\n# Calculate average characteristics for each group:\n# - population size, demographic percentages\n\n# Use group_by() and summarize() to create this comparison\n# Create a professional table showing the patterns\n\npattern_analysis &lt;- demographic_moe %&gt;%\n  group_by(high_moe_flag) %&gt;%\n  summarize(\n    n_tracts = n(),\n    avg_population = mean(total_popE, na.rm = TRUE),\n    avg_pct_white = mean(pct_white, na.rm = TRUE),\n    avg_pct_black = mean(pct_black, na.rm = TRUE),\n    avg_pct_hispanic = mean(pct_hispanic, na.rm = TRUE)\n  ) %&gt;%\n  ungroup()\n\n# Nicely formatted comparison table\n\npattern_analysis %&gt;%\n  kable(\n    digits = 1,\n    caption = \"Comparison of Tracts by Data Quality (High MOE vs. Reliable)\"\n  )\n\n\nComparison of Tracts by Data Quality (High MOE vs. Reliable)\n\n\n\n\n\n\n\n\n\n\nhigh_moe_flag\nn_tracts\navg_population\navg_pct_white\navg_pct_black\navg_pct_hispanic\n\n\n\n\nTRUE\n387\n3231.3\n74.4\n15.4\n2.4\n\n\nNA\n9\n193.2\n95.2\n0.0\n0.0\n\n\n\n\n\n“Pattern Analysis: [Describe any patterns you observe. Do certain types of communities have less reliable data? What might explain this? All the census tracts I looked at had MOE issues. The Black and Latino population data did have higher MOEs in general, perhaps because they had a smaller sample size. - Would appreciate feedback on this!]”"
  },
  {
    "objectID": "labs/lab1/assignment1_template.html#analysis-integration-and-professional-summary",
    "href": "labs/lab1/assignment1_template.html#analysis-integration-and-professional-summary",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "5.1 Analysis Integration and Professional Summary",
    "text": "5.1 Analysis Integration and Professional Summary\n“Your Task: Write an executive summary that integrates findings from all four analyses.\nExecutive Summary Requirements: 1. Overall Pattern Identification: What are the systematic patterns across all your analyses? 2. Equity Assessment: Which communities face the greatest risk of algorithmic bias based on your findings? 3. Root Cause Analysis: What underlying factors drive both data quality issues and bias risk? 4. Strategic Recommendations: What should the Department implement to address these systematic issues?\nExecutive Summary:\n[Our analysis of tract-level ACS data reveals that data quality problems are not randomly distributed across communities but follow clear and systematic patterns. Tracts with smaller populations consistently show higher margins of error for race and ethnicity variables, often exceeding the 15% threshold we defined for reliability concerns. In addition, tracts with higher shares of minority residents—particularly Hispanic and Black populations—are more likely to have elevated uncertainty in their demographic estimates. These findings indicate that the reliability of ACS data is unevenly distributed, with some communities consistently at a disadvantage.\nThis uneven distribution of reliability has important equity implications. Communities that are rural, sparsely populated, or home to significant minority populations face the greatest risk of algorithmic bias. If public agencies or partner organizations treat ACS point estimates as precise without accounting for uncertainty, decisions around resource allocation, service provision, or equity monitoring could systematically disadvantage these groups. In practice, the populations already most vulnerable to underinvestment and underrepresentation in surveys are also the ones most likely to be mischaracterized by models built on noisy or unstable data.\nThe root causes of these data quality disparities lie in both statistical and structural factors. Survey sampling variability is highest where population counts are low, leading to inflated margins of error in small tracts. At the same time, nonresponse and undercoverage are more common in communities with higher proportions of immigrants, renters, and low-income households. These factors compound one another, producing both unreliable estimates and heightened risk of algorithmic bias. The patterns observed are thus not only statistical artifacts but reflections of deeper structural inequities in data collection and representation.\nTo address these challenges, the Department should adopt a multi-layered strategy. In the short term, all products and models should explicitly incorporate margins of error, with unreliable tracts either flagged, down-weighted, or aggregated to higher levels of geography. In the medium term, statistical smoothing methods and fairness audits can reduce the impact of noisy inputs on decision-making. Over the long term, investment in targeted data collection and stronger transparency requirements will be necessary to ensure that all communities are represented with sufficient accuracy. By embedding data reliability standards into analytic workflows, the Department can both mitigate bias and build greater trust in its use of demographic data.]"
  },
  {
    "objectID": "labs/lab1/assignment1_template.html#specific-recommendations",
    "href": "labs/lab1/assignment1_template.html#specific-recommendations",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "6.3 Specific Recommendations",
    "text": "6.3 Specific Recommendations\nYour Task: Create a decision framework for algorithm implementation.\n\n# Create a summary table using your county reliability data\n# Include: county name, median income, MOE percentage, reliability category\n\n# Add a new column with algorithm recommendations using case_when():\n# - High Confidence: \"Safe for algorithmic decisions\"\n# - Moderate Confidence: \"Use with caution - monitor outcomes\"  \n# - Low Confidence: \"Requires manual review or additional data\"\n\n# Format as a professional table with kable()\"\n\n\ncounty_summary &lt;- paa_data_alt %&gt;%\n  select(\n    County = NAME,\n    `Median Income` = median_incomeE,\n    `MOE %` = moe_pct,\n    Reliability = reliability\n  ) %&gt;%\n  mutate(\n    Recommendation = case_when(\n      Reliability == \"High Confidence\" ~ \"Safe for algorithmic decisions\",\n      Reliability == \"Moderate Confidence\" ~ \"Use with caution - monitor outcomes\",\n      Reliability == \"Low Confidence\" ~ \"Requires manual review or additional data\",\n      TRUE ~ \"Unclassified\"\n    )\n  )\n\n# Nicely formatted table\ncounty_summary %&gt;%\n  kable(\n    digits = 1,\n    caption = \"County Reliability and Algorithmic Recommendations\"\n  )\n\n\nCounty Reliability and Algorithmic Recommendations\n\n\n\n\n\n\n\n\n\nCounty\nMedian Income\nMOE %\nReliability\nRecommendation\n\n\n\n\nAdams\n78975\n4.2\nHigh Confidence\nSafe for algorithmic decisions\n\n\nAllegheny\n72537\n1.2\nHigh Confidence\nSafe for algorithmic decisions\n\n\nArmstrong\n61011\n3.6\nHigh Confidence\nSafe for algorithmic decisions\n\n\nBeaver\n67194\n2.3\nHigh Confidence\nSafe for algorithmic decisions\n\n\nBedford\n58337\n4.5\nHigh Confidence\nSafe for algorithmic decisions\n\n\nBerks\n74617\n1.6\nHigh Confidence\nSafe for algorithmic decisions\n\n\nBlair\n59386\n3.5\nHigh Confidence\nSafe for algorithmic decisions\n\n\nBradford\n60650\n3.6\nHigh Confidence\nSafe for algorithmic decisions\n\n\nBucks\n107826\n1.4\nHigh Confidence\nSafe for algorithmic decisions\n\n\nButler\n82932\n2.6\nHigh Confidence\nSafe for algorithmic decisions\n\n\nCambria\n54221\n3.3\nHigh Confidence\nSafe for algorithmic decisions\n\n\nCameron\n46186\n5.6\nModerate Confidence\nUse with caution - monitor outcomes\n\n\nCarbon\n64538\n5.3\nModerate Confidence\nUse with caution - monitor outcomes\n\n\nCentre\n70087\n2.8\nHigh Confidence\nSafe for algorithmic decisions\n\n\nChester\n118574\n1.7\nHigh Confidence\nSafe for algorithmic decisions\n\n\nClarion\n58690\n4.4\nHigh Confidence\nSafe for algorithmic decisions\n\n\nClearfield\n56982\n2.8\nHigh Confidence\nSafe for algorithmic decisions\n\n\nClinton\n59011\n3.9\nHigh Confidence\nSafe for algorithmic decisions\n\n\nColumbia\n59457\n3.8\nHigh Confidence\nSafe for algorithmic decisions\n\n\nCrawford\n58734\n3.9\nHigh Confidence\nSafe for algorithmic decisions\n\n\nCumberland\n82849\n2.2\nHigh Confidence\nSafe for algorithmic decisions\n\n\nDauphin\n71046\n2.3\nHigh Confidence\nSafe for algorithmic decisions\n\n\nDelaware\n86390\n1.5\nHigh Confidence\nSafe for algorithmic decisions\n\n\nElk\n61672\n6.6\nModerate Confidence\nUse with caution - monitor outcomes\n\n\nErie\n59396\n2.6\nHigh Confidence\nSafe for algorithmic decisions\n\n\nFayette\n55579\n4.2\nHigh Confidence\nSafe for algorithmic decisions\n\n\nForest\n46188\n10.0\nModerate Confidence\nUse with caution - monitor outcomes\n\n\nFranklin\n71808\n3.0\nHigh Confidence\nSafe for algorithmic decisions\n\n\nFulton\n63153\n3.6\nHigh Confidence\nSafe for algorithmic decisions\n\n\nGreene\n66283\n6.4\nModerate Confidence\nUse with caution - monitor outcomes\n\n\nHuntingdon\n61300\n4.7\nHigh Confidence\nSafe for algorithmic decisions\n\n\nIndiana\n57170\n4.6\nHigh Confidence\nSafe for algorithmic decisions\n\n\nJefferson\n56607\n3.4\nHigh Confidence\nSafe for algorithmic decisions\n\n\nJuniata\n61915\n4.8\nHigh Confidence\nSafe for algorithmic decisions\n\n\nLackawanna\n63739\n2.6\nHigh Confidence\nSafe for algorithmic decisions\n\n\nLancaster\n81458\n1.8\nHigh Confidence\nSafe for algorithmic decisions\n\n\nLawrence\n57585\n3.1\nHigh Confidence\nSafe for algorithmic decisions\n\n\nLebanon\n72532\n2.7\nHigh Confidence\nSafe for algorithmic decisions\n\n\nLehigh\n74973\n2.0\nHigh Confidence\nSafe for algorithmic decisions\n\n\nLuzerne\n60836\n2.4\nHigh Confidence\nSafe for algorithmic decisions\n\n\nLycoming\n63437\n4.4\nHigh Confidence\nSafe for algorithmic decisions\n\n\nMcKean\n57861\n4.7\nHigh Confidence\nSafe for algorithmic decisions\n\n\nMercer\n57353\n3.6\nHigh Confidence\nSafe for algorithmic decisions\n\n\nMifflin\n58012\n3.4\nHigh Confidence\nSafe for algorithmic decisions\n\n\nMonroe\n80656\n3.2\nHigh Confidence\nSafe for algorithmic decisions\n\n\nMontgomery\n107441\n1.3\nHigh Confidence\nSafe for algorithmic decisions\n\n\nMontour\n72626\n7.1\nModerate Confidence\nUse with caution - monitor outcomes\n\n\nNorthampton\n82201\n1.9\nHigh Confidence\nSafe for algorithmic decisions\n\n\nNorthumberland\n55952\n2.7\nHigh Confidence\nSafe for algorithmic decisions\n\n\nPerry\n76103\n3.2\nHigh Confidence\nSafe for algorithmic decisions\n\n\nPhiladelphia\n57537\n1.4\nHigh Confidence\nSafe for algorithmic decisions\n\n\nPike\n76416\n4.9\nHigh Confidence\nSafe for algorithmic decisions\n\n\nPotter\n56491\n4.4\nHigh Confidence\nSafe for algorithmic decisions\n\n\nSchuylkill\n63574\n2.4\nHigh Confidence\nSafe for algorithmic decisions\n\n\nSnyder\n65914\n5.6\nModerate Confidence\nUse with caution - monitor outcomes\n\n\nSomerset\n57357\n2.8\nHigh Confidence\nSafe for algorithmic decisions\n\n\nSullivan\n62910\n9.3\nModerate Confidence\nUse with caution - monitor outcomes\n\n\nSusquehanna\n63968\n3.1\nHigh Confidence\nSafe for algorithmic decisions\n\n\nTioga\n59707\n3.2\nHigh Confidence\nSafe for algorithmic decisions\n\n\nUnion\n64914\n7.3\nModerate Confidence\nUse with caution - monitor outcomes\n\n\nVenango\n59278\n3.4\nHigh Confidence\nSafe for algorithmic decisions\n\n\nWarren\n57925\n5.2\nModerate Confidence\nUse with caution - monitor outcomes\n\n\nWashington\n74403\n2.4\nHigh Confidence\nSafe for algorithmic decisions\n\n\nWayne\n59240\n4.8\nHigh Confidence\nSafe for algorithmic decisions\n\n\nWestmoreland\n69454\n2.0\nHigh Confidence\nSafe for algorithmic decisions\n\n\nWyoming\n67968\n3.9\nHigh Confidence\nSafe for algorithmic decisions\n\n\nYork\n79183\n1.8\nHigh Confidence\nSafe for algorithmic decisions\n\n\n\n\n\nKey Recommendations\nYour Task Use your analysis results to provide specific guidance to the department.\n\nCounties suitable for immediate algorithmic implementation: [Counties with high confidence data are appropriate because they have low margins of error.]\nCounties requiring additional oversight: [List counties with moderate confidence data and describe what kind of monitoring would be needed. The counties with moderate confidence data include Cameron, Carbon, Elk, Forest, Greene, Montour, Snyder, Sullivan, Union, and Warren counties. Monitoring could include tracking discrepancies or unusual trends or flagging certain results for human review.]\nCounties needing alternative approaches: None"
  },
  {
    "objectID": "labs/lab1/assignment1_template.html#questions-for-further-investigation",
    "href": "labs/lab1/assignment1_template.html#questions-for-further-investigation",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "Questions for Further Investigation",
    "text": "Questions for Further Investigation\n[List 2-3 questions that your analysis raised that you’d like to explore further in future assignments. Consider questions about spatial patterns, time trends, or other demographic factors.\nHow can data be assessed if all tracts have high margins of error? How can we judge whether certain issues or traits are spatially signifigant?]"
  },
  {
    "objectID": "labs/midterm/Midterm_2025.html",
    "href": "labs/midterm/Midterm_2025.html",
    "title": "Midterm Challenge: Philadelphia Housing Price Prediction",
    "section": "",
    "text": "Due Date: October 27, 2025\nIn-Class Presentations: October 27, 2025 (5 minutes per team)\nWeight: 15% of final grade\nTeam: You’ll work with your table-mates as a team. Feel free to delegate. Everyone should upload their final products onto their own portfolio websites. Be sure to acknowledge your team-mates.\nSubmission Format:\n\nPresentation Slides (.qmd → revealjs, ~10-15 slides) - Main deliverable (see my weekly lecture notes for inspiration!)\nTechnical Appendix (.qmd → HTML document) - Supporting details"
  },
  {
    "objectID": "labs/midterm/Midterm_2025.html#overview",
    "href": "labs/midterm/Midterm_2025.html#overview",
    "title": "Midterm Challenge: Philadelphia Housing Price Prediction",
    "section": "",
    "text": "Due Date: October 27, 2025\nIn-Class Presentations: October 27, 2025 (5 minutes per team)\nWeight: 15% of final grade\nTeam: You’ll work with your table-mates as a team. Feel free to delegate. Everyone should upload their final products onto their own portfolio websites. Be sure to acknowledge your team-mates.\nSubmission Format:\n\nPresentation Slides (.qmd → revealjs, ~10-15 slides) - Main deliverable (see my weekly lecture notes for inspiration!)\nTechnical Appendix (.qmd → HTML document) - Supporting details"
  },
  {
    "objectID": "labs/midterm/Midterm_2025.html#the-challenge",
    "href": "labs/midterm/Midterm_2025.html#the-challenge",
    "title": "Midterm Challenge: Philadelphia Housing Price Prediction",
    "section": "The Challenge",
    "text": "The Challenge\nYou are consultancy (please name your consultancy) competing to win the bid to work for a project for the Philadelphia Office of Property Assessment. The city wants to improve its Automated Valuation Model (AVM) for property tax assessments. Your task is to build a predictive model for residential sale prices and present your findings to city officials in a 5-minute briefing.\nDeliverables:\n\nPresentation slides (10-15 slides MAX) - Your main findings for stakeholders\nTechnical appendix (HTML document) - All code, diagnostics, and detailed analysis\n5-minute in-class presentation - Deliver your slides on October 27th\n\nYour goal: Predict 2023-2024 home sale prices accurately while communicating findings clearly to a policy audience."
  },
  {
    "objectID": "labs/midterm/Midterm_2025.html#two-part-submission",
    "href": "labs/midterm/Midterm_2025.html#two-part-submission",
    "title": "Midterm Challenge: Philadelphia Housing Price Prediction",
    "section": "Two-Part Submission",
    "text": "Two-Part Submission\n\nPart A: Presentation Slides (Primary Deliverable)\nFormat: Quarto revealjs presentation\nExample YAML:\n---\ntitle: \"Philadelphia Housing Price Prediction\"\nsubtitle: \"Improving Property Tax Assessments\"\nauthor: \"Your Name\"\nformat: \n  revealjs:\n    theme: simple\n    slide-number: true\n    smaller: true\n---\nContent: ~10-15 (could be less!!) slides covering: 1. Research question & motivation (1-2 slides) 2. Data overview (1 slide) 3. Key visualizations (2-3 slides) 4. Model comparison results (1-2 slides) 5. Main findings (2-3 slides) 6. Policy recommendations (1-2 slides)\nAudience: City officials who don’t know R or care about the nitty gritty of stats. They just want the best estimates possible.\nNo code in these slides - just polished visualizations and key takeaways\n\n\n\nPart B: Technical Appendix (Supporting Documentation)\nFormat: Quarto HTML document\nExample YAML:\n---\ntitle: \"Philadelphia Housing Model - Technical Appendix\"\nauthor: \"Your Name\"\nformat: \n  html:\n    code-fold: show\n    toc: true\n    toc-location: left\n    theme: cosmo\n---\nContent: All the technical details: - Complete data cleaning code - All EDA visualizations - Feature engineering code - Full model outputs - Diagnostic plots - Detailed interpretations\nAudience: Data scientists and technical reviewers\nAll code visible - this is where you show your work"
  },
  {
    "objectID": "labs/midterm/Midterm_2025.html#data-sources",
    "href": "labs/midterm/Midterm_2025.html#data-sources",
    "title": "Midterm Challenge: Philadelphia Housing Price Prediction",
    "section": "Data Sources",
    "text": "Data Sources\n\nPrimary Dataset: Philadelphia Property Sales\nSource: Philadelphia Property Sales\nThis dataset contains actual property sales with:\n\nSale price\nSale date\nProperty characteristics (bedrooms, bathrooms, sq ft, etc.)\nProperty location (address, coordinates)\n\nYou will need to:\n\nDownload the data\nClean it (missing values, outliers, data errors)\nFilter to 2023-2024 residential sales only\n\n\n\nSecondary Datasets (You Choose!)\nRequired: Browse the OpenPhily Data portal and use Census Data to incorporate spatial features into your model.\nYour task: Think like an urban planner. What location factors matter for housing prices in Philadelphia?"
  },
  {
    "objectID": "labs/midterm/Midterm_2025.html#assignment-structure",
    "href": "labs/midterm/Midterm_2025.html#assignment-structure",
    "title": "Midterm Challenge: Philadelphia Housing Price Prediction",
    "section": "Assignment Structure",
    "text": "Assignment Structure\nYour work should follow this workflow, with results split between presentation and appendix:\n\nPhase 1: Data Preparation (Technical Appendix)\nLoad and clean Philadelphia sales data:\n\nFilter to residential properties, 2023-2024 sales\nRemove obvious errors\nHandle missing values\nDocument all cleaning decisions\n\nLoad secondary data:\n\nCensus data (tidycensus):\nSpatial amenities (OpenDataPhilly)\nJoin to sales data appropriately\nMake sure you have the correct CRS!\n\nDeliverable (Appendix only):\n\nComplete data cleaning code\nSummary tables showing before/after dimensions\nNarrative explaining decisions\n\n\n\n\nPhase 2: Exploratory Data Analysis\nCreate at least 5 professional visualizations:\n\nDistribution of sale prices (histogram)\nGeographic distribution (map)\nPrice vs. structural features (scatter plots)\nPrice vs. spatial features (scatter plots)\nOne creative visualization\n\nFor presentation slides: Select your best 2-3 visualizations that tell a compelling story\nFor appendix: Include all visualizations with detailed interpretations\nExample presentation slide:\n## Where Are Expensive Homes in Philadelphia?\n\n[Beautiful map showing price patterns]\n\n**Key Findings:**\n- Center City and University City command premium prices\n- River wards show emerging appreciation\n- Northeast Philadelphia remains most affordable\n\n\n\nPhase 3: Feature Engineering (Technical Appendix)\nCreate spatial features: (these are examples below, but how you construct your model is up to your team)\n\nBuffer-based features:\n\nParks within 500ft, 1000ft\nTransit stops within 400ft\nSchools, crime, etc.\n\nk-Nearest Neighbor features:\n\nAverage distance to k nearest parks, transit, etc.\n\nCensus variables:\n\nJoin median income, education, poverty, etc.\n\nInteraction terms:\n\nTheoretically motivated combinations\n\n\nDeliverable (Appendix only):\n\nAll feature engineering code\nSummary table of features created\nBrief justification for each feature\n\n\n\n\nPhase 4: Model Building\nBuild models progressively: (for example)\n\nStructural features only\n\nCensus variables\n\n\nSpatial features\n\n\nInteractions and fixed effects\n\n\nFor presentation slides: Show one comparison table (RMSE, R² for 4 different models you constructed in your process)\nFor appendix:\n\nComplete model code\nFull stargazer/modelsummary output\nCoefficient interpretations\n\nExample presentation slide:\n## Model Performance Improves with Each Layer\n\n| Model | CV RMSE (log) | R² |\n|-------|---------------|-----|\n| Structural Only | 0.42 | 0.61 |\n| + Census | 0.38 | 0.69 |\n| + Spatial | 0.31 | 0.78 |\n| + Interactions/FE | 0.26 | 0.84 |\n\n**Bottom line:** Neighborhood effects matter most!\n\n\n\nPhase 5: Model Validation\nUse 10-fold cross-validation: - Compare all 4 models - Report RMSE, MAE, R² for each - Create predicted vs. actual plot\nFor presentation slides: Final CV results table (shown above) + one compelling visual\nFor appendix:\n\nComplete CV code\nDetailed results\nPredicted vs. actual scatter plot\nDiscussion of which features matter most\n\n\n\n\nPhase 6: Model Diagnostics (Technical Appendix Only)\nCheck assumptions for best model:\n\nResidual plot (linearity, homoscedasticity)\nQ-Q plot (normality)\nCook’s distance (influential observations)\n\nDeliverable (Appendix only):\n\nAll 3 diagnostic plots\nInterpretation of each\nHow you addressed violations (if any)\n\nNote: Don’t include diagnostic plots in presentation - too technical!\n\n\n\nPhase 7: Conclusions & Recommendations\nAnswer these questions:\n\nWhat is your final model’s accuracy?\nWhich features matter most for Philadelphia prices?\nWhich neighborhoods are hardest to predict?\nEquity concerns?\nLimitations?\n\nFor presentation slides: 1-2 slides with clear, concise answers (bullet points)\nFor appendix: 2-3 paragraphs with detailed discussion\nExample presentation slide:\n## Key Findings & Recommendations\n\n**Model Accuracy:** RMSE = 0.26 (log scale) ≈ 26% typical error\n\n**Top Predictors:**\n- Neighborhood fixed effects (largest impact)\n- Square footage (β = 0.0003, p &lt; 0.001)\n- Distance to transit (β = -0.05, p &lt; 0.001)\n\n**Recommendations:**\n✓ Current AVM undervalues transit-accessible properties  \n✓ Model struggles in rapidly gentrifying neighborhoods"
  },
  {
    "objectID": "labs/midterm/Midterm_2025.html#submission-requirements",
    "href": "labs/midterm/Midterm_2025.html#submission-requirements",
    "title": "Midterm Challenge: Philadelphia Housing Price Prediction",
    "section": "Submission Requirements",
    "text": "Submission Requirements\n\nWhat to Submit (by 9:59 AM, October 27, 2025)\nUpload to Canvas - A link to your portfolio that Contains\n\nPresentation Slides\n\nLastName_FirstName_Presentation.html (rendered slides)\nLastName_FirstName_Presentation.qmd (source file)\nMust use format: revealjs\n10-15 slides maximum\nNo code visible in slides\n\nTechnical Appendix\n\nLastName_FirstName_Appendix.html (rendered document)\nLastName_FirstName_Appendix.qmd (source file)\nMust use format: html\nAll code visible and commented\nComplete analysis documented\n\nData files OR clear download instructions in appendix\n\nFor Teams: Use LastName1_LastName2_Presentation.html\n\n\nIn-Class Presentation (October 27, 2025)\nFormat: 5 minutes per team\nWhat to present:\n\nWalk through your presentation slides. Choose your team’s spoke’s person or take turns You’ll all stand up there and try to look calm, confident, & collected.\nHit the highlights - research question, key viz, model results, recommendations\nSpeak to a policy audience (your classmates are pretending to be city officials)\nBe ready for 1-2 questions\nYou are trying to win the bid! Convince the audience of your agency’s work.\n\nWhat NOT to do:\n\nDon’t read slides verbatim\nDon’t show code\nDon’t go into technical details\nDon’t go over 5 minutes (I’ll cut you off!)"
  },
  {
    "objectID": "labs/midterm/Midterm_2025.html#grading-rubric-scaled-to-15-of-course-grade",
    "href": "labs/midterm/Midterm_2025.html#grading-rubric-scaled-to-15-of-course-grade",
    "title": "Midterm Challenge: Philadelphia Housing Price Prediction",
    "section": "Grading Rubric (Scaled to 15% of course grade)",
    "text": "Grading Rubric (Scaled to 15% of course grade)\n\nPresentation Slides\n\n\n\n\n\n\n\n\nComponent\nPoints\nCriteria\n\n\n\n\nResearch Question\n2\nClear motivation, Set the stage\n\n\nData Overview\n2\nConcise description of sources, sample size\n\n\nVisualizations\n3\n2-3 polished, publication-quality visualizations; clear takeaways\n\n\nModel Comparison\n3\nClean results table; clear winner; interprets improvement\n\n\nKey Findings\n3\nTop predictors identified; coefficients interpreted correctly\n\n\nPresentation Quality\n3\nProfessional design, no typos, flows logically, appropriate for audience\n\n\n\nKey: Slides should tell a compelling story without technical jargon. Imagine presenting to the Deputy Mayor.\n\n\n\nIn-Class Presentation\n\n\n\n\n\n\n\n\nComponent\nPoints\nCriteria\n\n\n\n\nContent\n2\nCovers key points efficiently, answers questions thoughtfully\n\n\nTime Management\n2\nFinishes within 5 minutes without rushing\n\n\n\n\n\n\nTechnical Appendix\n\n\n\n\n\n\n\n\nComponent\nPoints\nCriteria\n\n\n\n\nData Cleaning\n3\nComplete code, proper filtering, missing value handling, documentation\n\n\nEDA\n3\n5+ visualizations, each with interpretation\n\n\nFeature Engineering\n3\nBuffers , kNN , census , interactions , all properly created\n\n\nModel Building\n3\n4 progressive models, proper specification, handles sparse categories\n\n\nCross-Validation\n3\nProper 10-fold CV, results table, code runs without errors\n\n\nDiagnostics\n3\nResidual plots included, interpreted, violations addressed\n\n\nCode Quality\n3\nClean, commented, reproducible, follows best practices, no errors\n\n\n\nKey: This is where technical reviewers verify your work. All code must run without errors & be reproducible!!."
  },
  {
    "objectID": "labs/midterm/Midterm_2025.html#example-presentation-structure",
    "href": "labs/midterm/Midterm_2025.html#example-presentation-structure",
    "title": "Midterm Challenge: Philadelphia Housing Price Prediction",
    "section": "Example Presentation Structure",
    "text": "Example Presentation Structure\nSlide 1: Title - Your team name and teammates - Project title - Date\nSlide 2: The Problem\nSlide 3: Data Sources - Property sales (n = X,XXX, 2023-2024) - Census ACS (income, education, poverty) - OpenDataPhilly (parks, transit, crime)\nSlide 4: Where Are Expensive Homes? - [Map visualization] - Key pattern observed\nSlide 5: What Drives Prices? - [Best scatter plot or faceted visualization] - Key relationship identified\nSlide 6: Model Comparison - [Results table] - “Each layer improves prediction”\nSlide 7: Top Predictors - Neighborhood (biggest impact) - Square footage (β = X) - Transit access (β = Y)\nSlide 8: Model Performance - Final RMSE: 0.26 (log scale) - Translation: ~26% typical error - Beats baseline by 40%\nSlide 9: Hardest to Predict - [Visualization of residuals by neighborhood]\nSlide 10: Recommendations\nSlide 11: Limitations & Next Steps\nSlide 12: Questions? - Thank you - [Contact info]"
  },
  {
    "objectID": "labs/midterm/Midterm_2025.html#tips-for-success",
    "href": "labs/midterm/Midterm_2025.html#tips-for-success",
    "title": "Midterm Challenge: Philadelphia Housing Price Prediction",
    "section": "Tips for Success",
    "text": "Tips for Success\n\nStart Early\n\nData cleaning always takes longer than expected\nOpenDataPhilly can be slow to download\nLeave time for troubleshooting AND RENDERING!!!\n\n\n\nCheck Your Work\n\nOrganize your file directory from the beginning.\nRun your entire .qmd file from scratch before submitting\nMake sure all visualizations display\nCheck that your narrative flows logically"
  },
  {
    "objectID": "labs/midterm/Midterm_2025.html#frequently-asked-questions",
    "href": "labs/midterm/Midterm_2025.html#frequently-asked-questions",
    "title": "Midterm Challenge: Philadelphia Housing Price Prediction",
    "section": "Frequently Asked Questions",
    "text": "Frequently Asked Questions\nQ: Do I have to create both slides AND an appendix?\nA: Yes! Slides are your main deliverable (present findings). Appendix proves you did the work correctly.\nQ: Can code appear in my presentation slides?\nA: NO! Slides are for city officials. All code goes in the technical appendix.\nQ: How many slides should I have?\nA: 10-15 maximum. Quality over quantity. Each slide should have a clear purpose.\nQ: Can I use a different city?\nA: No, everyone uses Philadelphia for comparability.\nQ: How do I make my .qmd render as revealjs slides?\nA: Use format: revealjs in your YAML (see template above). Test it early!\nQ: My presentation is 8 minutes. Is that okay?\nA: NO! You must cut it to 5 minutes. Practice and trim ruthlessly.\nQ: Should I include all 5 EDA visualizations in my slides?\nA: No! Slides should have your best 2-3 visualizations. Put all 5 in the appendix.\nQ: My RMSE is 0.35 in log scale. Is that good?\nA: Depends on your data, but 0.25-0.45 is typical for hedonic models. Compare to your baseline or put your data back into dollars!\nQ: Should I remove all outliers?\nA: No! Only remove obvious errors. Use log transformation to handle legitimate outliers.\nQ: What if my code works on my computer but not when I knit?\nA: Start fresh, restart R, knit in a clean session. Check for hard-coded paths.\nQ: Can I use ChatGPT/Claude to write my analysis?\nA: You may use AI for debugging code, but NOT for writing your analysis.\nQ: How formal should my presentation be?\nA: Professional but not stuffy. Like you’re briefing a city council member who’s smart but doesn’t know statistics.\nQ: What happens if I go over 5 minutes?\nA: I’ll politely cut you off and you’ll lose points. Practice with a timer!"
  },
  {
    "objectID": "labs/midterm/Midterm_2025.html#example-workflow",
    "href": "labs/midterm/Midterm_2025.html#example-workflow",
    "title": "Midterm Challenge: Philadelphia Housing Price Prediction",
    "section": "Example Workflow",
    "text": "Example Workflow\nWeek 1: - Download data - Initial cleaning - Basic EDA\nWeek 2: - Feature engineering - Build 4 models - Run cross-validation - Diagnostics - Write conclusions - Proofread and submit"
  },
  {
    "objectID": "labs/midterm/Midterm_2025.html#academic-integrity",
    "href": "labs/midterm/Midterm_2025.html#academic-integrity",
    "title": "Midterm Challenge: Philadelphia Housing Price Prediction",
    "section": "Academic Integrity",
    "text": "Academic Integrity\n\nYou may discuss concepts with classmates\nYou may NOT share code or slides\nAll work must be your own (or your teams)\nCite any external resources used\nPlease acknowledge how you used AI in your work and which AI you used (For example, Claude helped me today in coming up with a draft of this assignment, but I edited it thoroughly!)"
  },
  {
    "objectID": "labs/midterm/Midterm_2025.html#final-checklist-before-submitting",
    "href": "labs/midterm/Midterm_2025.html#final-checklist-before-submitting",
    "title": "Midterm Challenge: Philadelphia Housing Price Prediction",
    "section": "Final Checklist Before Submitting",
    "text": "Final Checklist Before Submitting\n\nPresentation Slides\n\nRenders correctly as revealjs slides\n10-15 slides maximum\nNo code visible anywhere\n2-3 polished visualizations\nClear model comparison table\nNo typos or formatting errors\nProfessional theme applied\nTested presentation timing (&lt;5 minutes)\n\n\n\nTechnical Appendix\n\nRenders correctly as HTML document\nAll code visible and commented\nData cleaning fully documented\n5+ EDA visualizations included\nAll features properly created\n4 models with full output\n10-fold CV code runs without errors\nDiagnostic plots included\nSparse categories handled correctly\nTested that it knits without errors\n\n\n\nBoth Files\n\nProper file naming convention\nBoth .qmd source files included\nData sources clearly documented\nNo hard-coded file paths (use relative paths! - this should be reproducible)\nUploaded to Canvas on time"
  },
  {
    "objectID": "labs/midterm/Abraham_Knox_Levin_Appendix.html",
    "href": "labs/midterm/Abraham_Knox_Levin_Appendix.html",
    "title": "Philadelphia Housing Model - Technical Appendix",
    "section": "",
    "text": "Code\nlibrary(sf)\n\n\nWarning: package 'sf' was built under R version 4.4.3\n\n\nLinking to GEOS 3.13.0, GDAL 3.10.1, PROJ 9.5.1; sf_use_s2() is TRUE\n\n\nCode\nlibrary(tidyverse)\n\n\nWarning: package 'ggplot2' was built under R version 4.4.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   4.0.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(tigris)\n\n\nTo enable caching of data, set `options(tigris_use_cache = TRUE)`\nin your R script or .Rprofile.\n\n\nCode\nlibrary(tidycensus)\nlibrary(scales)\n\n\nWarning: package 'scales' was built under R version 4.4.3\n\n\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\n\nCode\nlibrary(patchwork)\n\n\nWarning: package 'patchwork' was built under R version 4.4.3\n\n\nCode\nlibrary(here)\n\n\nWarning: package 'here' was built under R version 4.4.3\n\n\nhere() starts at C:/Users/annal/OneDrive/Documents/GitHub/portfolio-setup-annaliseabraham8-star/labs/midterm\n\n\nCode\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(kableExtra)\n\n\nWarning: package 'kableExtra' was built under R version 4.4.3\n\n\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\n\nCode\nlibrary(ggplot2)\nlibrary(stringr)\nlibrary(units)\n\n\nudunits database from C:/Users/annal/AppData/Local/R/win-library/4.4/units/share/udunits/udunits2.xml\n\n\nCode\nlibrary(stargazer)\n\n\n\nPlease cite as: \n\n Hlavac, Marek (2022). stargazer: Well-Formatted Regression and Summary Statistics Tables.\n R package version 5.2.3. https://CRAN.R-project.org/package=stargazer \n\n\nCode\nlibrary(car)\n\n\nWarning: package 'car' was built under R version 4.4.3\n\n\nLoading required package: carData\n\n\nWarning: package 'carData' was built under R version 4.4.3\n\n\n\nAttaching package: 'car'\n\nThe following object is masked from 'package:dplyr':\n\n    recode\n\nThe following object is masked from 'package:purrr':\n\n    some\n\n\nCode\nlibrary(caret)\n\n\nWarning: package 'caret' was built under R version 4.4.3\n\n\nLoading required package: lattice\n\nAttaching package: 'caret'\n\nThe following object is masked from 'package:purrr':\n\n    lift\n\n\nCode\nlibrary(lmtest)\n\n\nWarning: package 'lmtest' was built under R version 4.4.3\n\n\nLoading required package: zoo\n\n\nWarning: package 'zoo' was built under R version 4.4.3\n\n\n\nAttaching package: 'zoo'\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\n\nCode\nlibrary(skimr)\n\n\nWarning: package 'skimr' was built under R version 4.4.3\n\n\nCode\nlibrary(ggfortify)\n\n\nWarning: package 'ggfortify' was built under R version 4.4.3\n\n\n\n\n\n\n\nCode\nproperty_sales &lt;- st_read(\"https://github.com/MUSA-5080-Fall-2025/MUSA-5080-Fall-2025/releases/download/v1.0.0/opa_properties_public.csv\")\n\n\nReading layer `_gdal_http_opa_properties_public' from data source \n  `https://github.com/MUSA-5080-Fall-2025/MUSA-5080-Fall-2025/releases/download/v1.0.0/opa_properties_public.csv' \n  using driver `CSV'\n\n\nWarning: no simple feature geometries present: returning a data.frame or tbl_df\n\n\nCode\nproperty_sales_res &lt;- property_sales %&gt;% filter(str_detect(zoning, \"^R\") | str_detect(zoning, \"IRMX\")) %&gt;% filter(str_detect(category_code_description, \"SINGLE FAMILY\") | str_detect(category_code_description, \"MULTI FAMILY\") | str_detect(category_code_description, \"MIXED USE\")) %&gt;% mutate(sale_price_n = as.numeric(sale_price)) %&gt;% filter(sale_price_n &lt; 10000000) %&gt;% filter(sale_date &gt;= as.Date(\"2023-01-01\") & sale_date &lt;= as.Date(\"2024-12-31\") )\n\nproperty_sales_res &lt;- property_sales_res %&gt;% filter(sale_price_n&lt;10000000 & sale_price_n &gt; 5000)\n\nggplot(property_sales_res, aes(x = sale_date, y = sale_price_n)) + geom_point()\n\n\n\n\n\n\n\n\n\nCode\nggplot(property_sales_res, aes(x = number_of_bedrooms, y = sale_price_n)) + geom_point()\n\n\n\n\n\n\n\n\n\nCode\n#Converting blank cells to NA \ncolSums(property_sales_res == \"\")\n\n\n                     objectid               assessment_date \n                            0                             0 \n                    basements               beginning_point \n                         4454                           451 \n                book_and_page                 building_code \n                            2                            12 \n    building_code_description                 category_code \n                           15                             0 \n    category_code_description                  census_tract \n                            0                             0 \n                  central_air               cross_reference \n                         4993                         27357 \n      date_exterior_condition                         depth \n                        27357                           187 \n              exempt_building                   exempt_land \n                            0                             0 \n           exterior_condition                    fireplaces \n                           11                           944 \n                     frontage                          fuel \n                          189                          8761 \n                garage_spaces                   garage_type \n                         1088                         10974 \n         general_construction               geographic_ward \n                          244                             0 \n          homestead_exemption               house_extension \n                            0                         26867 \n                 house_number            interior_condition \n                            0                            12 \n                     location             mailing_address_1 \n                            0                          3528 \n            mailing_address_2               mailing_care_of \n                        27357                         27347 \n           mailing_city_state                mailing_street \n                           63                           260 \n                  mailing_zip                  market_value \n                           88                             0 \n            market_value_date           number_of_bathrooms \n                        27357                          1038 \n           number_of_bedrooms               number_of_rooms \n                          232                         25771 \n               number_stories               off_street_open \n                          135                           326 \n               other_building                       owner_1 \n                        27330                             0 \n                      owner_2                 parcel_number \n                        18840                             0 \n                 parcel_shape                 quality_grade \n                           35                          1046 \n               recording_date               registry_number \n                            0                           106 \n                    sale_date                    sale_price \n                            0                             0 \n           separate_utilities                         sewer \n                        25361                         23810 \n                    site_type                    state_code \n                        27357                            62 \n                  street_code            street_designation \n                            0                             0 \n             street_direction                   street_name \n                        17229                             0 \n                       suffix              taxable_building \n                        27339                             0 \n                 taxable_land                    topography \n                            0                           478 \n                   total_area            total_livable_area \n                            6                             9 \n                  type_heater                    unfinished \n                         3738                         27357 \n                         unit                       utility \n                        25513                         27357 \n                    view_type                    year_built \n                          178                             9 \n          year_built_estimate                      zip_code \n                         5659                             0 \n                       zoning                           pin \n                            0                             0 \n            building_code_new building_code_description_new \n                           39                          1676 \n                        shape                  sale_price_n \n                            0                             0 \n\n\nCode\nproperty_sales_res &lt;- as.data.frame(lapply(property_sales_res, function(x) { \n  x &lt;- trimws(x) # remove leading/trailing spaces x[x == \"\"] &lt;- NA \n  return(x) }))\n\ncolSums(is.na(property_sales_res))\n\n\n                     objectid               assessment_date \n                            0                             0 \n                    basements               beginning_point \n                            0                             0 \n                book_and_page                 building_code \n                            0                             0 \n    building_code_description                 category_code \n                            0                             0 \n    category_code_description                  census_tract \n                            0                             0 \n                  central_air               cross_reference \n                            0                             0 \n      date_exterior_condition                         depth \n                            0                             0 \n              exempt_building                   exempt_land \n                            0                             0 \n           exterior_condition                    fireplaces \n                            0                             0 \n                     frontage                          fuel \n                            0                             0 \n                garage_spaces                   garage_type \n                            0                             0 \n         general_construction               geographic_ward \n                            0                             0 \n          homestead_exemption               house_extension \n                            0                             0 \n                 house_number            interior_condition \n                            0                             0 \n                     location             mailing_address_1 \n                            0                             0 \n            mailing_address_2               mailing_care_of \n                            0                             0 \n           mailing_city_state                mailing_street \n                            0                             0 \n                  mailing_zip                  market_value \n                            0                             0 \n            market_value_date           number_of_bathrooms \n                            0                             0 \n           number_of_bedrooms               number_of_rooms \n                            0                             0 \n               number_stories               off_street_open \n                            0                             0 \n               other_building                       owner_1 \n                            0                             0 \n                      owner_2                 parcel_number \n                            0                             0 \n                 parcel_shape                 quality_grade \n                            0                             0 \n               recording_date               registry_number \n                            0                             0 \n                    sale_date                    sale_price \n                            0                             0 \n           separate_utilities                         sewer \n                            0                             0 \n                    site_type                    state_code \n                            0                             0 \n                  street_code            street_designation \n                            0                             0 \n             street_direction                   street_name \n                            0                             0 \n                       suffix              taxable_building \n                            0                             0 \n                 taxable_land                    topography \n                            0                             0 \n                   total_area            total_livable_area \n                            0                             0 \n                  type_heater                    unfinished \n                            0                             0 \n                         unit                       utility \n                            0                             0 \n                    view_type                    year_built \n                            0                             0 \n          year_built_estimate                      zip_code \n                            0                             0 \n                       zoning                           pin \n                            0                             0 \n            building_code_new building_code_description_new \n                            0                             0 \n                        shape                  sale_price_n \n                            0                             0 \n\n\n\n\n\n\n\nCode\ncensus_api_key(\"5a82e243438bea307ae1c04f150d539c4db5fa47\", install = FALSE) \n\n\nTo install your API key for use in future sessions, run this function with `install = TRUE`.\n\n\nCode\nphiladelphia &lt;- get_acs( geography = \"tract\", county = \"Philadelphia\", state = \"PA\", variables = c(median_h_income = \"B19013_001\", total_population = \"B01003_001\"), survey = \"acs5\", year = 2023, output = \"wide\", geometry = TRUE )\n\n\nGetting data from the 2019-2023 5-year ACS\n\n\nDownloading feature geometry from the Census website.  To cache shapefiles for use in future sessions, set `options(tigris_use_cache = TRUE)`.\n\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |                                                                      |   1%\n  |                                                                            \n  |=                                                                     |   1%\n  |                                                                            \n  |=                                                                     |   2%\n  |                                                                            \n  |==                                                                    |   2%\n  |                                                                            \n  |==                                                                    |   3%\n  |                                                                            \n  |==                                                                    |   4%\n  |                                                                            \n  |===                                                                   |   4%\n  |                                                                            \n  |===                                                                   |   5%\n  |                                                                            \n  |====                                                                  |   5%\n  |                                                                            \n  |====                                                                  |   6%\n  |                                                                            \n  |=====                                                                 |   7%\n  |                                                                            \n  |=====                                                                 |   8%\n  |                                                                            \n  |======                                                                |   8%\n  |                                                                            \n  |======                                                                |   9%\n  |                                                                            \n  |=======                                                               |   9%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |=======                                                               |  11%\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |========                                                              |  12%\n  |                                                                            \n  |=========                                                             |  12%\n  |                                                                            \n  |=========                                                             |  13%\n  |                                                                            \n  |==========                                                            |  14%\n  |                                                                            \n  |===========                                                           |  15%\n  |                                                                            \n  |===========                                                           |  16%\n  |                                                                            \n  |============                                                          |  17%\n  |                                                                            \n  |=============                                                         |  18%\n  |                                                                            \n  |==============                                                        |  19%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |===============                                                       |  21%\n  |                                                                            \n  |================                                                      |  22%\n  |                                                                            \n  |================                                                      |  23%\n  |                                                                            \n  |=================                                                     |  24%\n  |                                                                            \n  |==================                                                    |  25%\n  |                                                                            \n  |==================                                                    |  26%\n  |                                                                            \n  |===================                                                   |  27%\n  |                                                                            \n  |====================                                                  |  28%\n  |                                                                            \n  |====================                                                  |  29%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |======================                                                |  31%\n  |                                                                            \n  |======================                                                |  32%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |========================                                              |  34%\n  |                                                                            \n  |========================                                              |  35%\n  |                                                                            \n  |=========================                                             |  36%\n  |                                                                            \n  |==========================                                            |  37%\n  |                                                                            \n  |===========================                                           |  38%\n  |                                                                            \n  |===========================                                           |  39%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |=============================                                         |  41%\n  |                                                                            \n  |=============================                                         |  42%\n  |                                                                            \n  |==============================                                        |  43%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |===============================                                       |  45%\n  |                                                                            \n  |================================                                      |  46%\n  |                                                                            \n  |=================================                                     |  47%\n  |                                                                            \n  |=================================                                     |  48%\n  |                                                                            \n  |==================================                                    |  49%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |===================================                                   |  51%\n  |                                                                            \n  |====================================                                  |  52%\n  |                                                                            \n  |=====================================                                 |  53%\n  |                                                                            \n  |======================================                                |  54%\n  |                                                                            \n  |======================================                                |  55%\n  |                                                                            \n  |=======================================                               |  56%\n  |                                                                            \n  |========================================                              |  57%\n  |                                                                            \n  |========================================                              |  58%\n  |                                                                            \n  |=========================================                             |  59%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |===========================================                           |  61%\n  |                                                                            \n  |============================================                          |  62%\n  |                                                                            \n  |============================================                          |  63%\n  |                                                                            \n  |=============================================                         |  64%\n  |                                                                            \n  |==============================================                        |  65%\n  |                                                                            \n  |==============================================                        |  66%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |================================================                      |  68%\n  |                                                                            \n  |=================================================                     |  69%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |==================================================                    |  71%\n  |                                                                            \n  |===================================================                   |  72%\n  |                                                                            \n  |===================================================                   |  73%\n  |                                                                            \n  |====================================================                  |  74%\n  |                                                                            \n  |=====================================================                 |  75%\n  |                                                                            \n  |=====================================================                 |  76%\n  |                                                                            \n  |======================================================                |  77%\n  |                                                                            \n  |=======================================================               |  78%\n  |                                                                            \n  |=======================================================               |  79%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |=========================================================             |  81%\n  |                                                                            \n  |=========================================================             |  82%\n  |                                                                            \n  |==========================================================            |  83%\n  |                                                                            \n  |===========================================================           |  84%\n  |                                                                            \n  |============================================================          |  85%\n  |                                                                            \n  |============================================================          |  86%\n  |                                                                            \n  |=============================================================         |  87%\n  |                                                                            \n  |==============================================================        |  88%\n  |                                                                            \n  |==============================================================        |  89%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |================================================================      |  91%\n  |                                                                            \n  |================================================================      |  92%\n  |                                                                            \n  |=================================================================     |  93%\n  |                                                                            \n  |==================================================================    |  94%\n  |                                                                            \n  |==================================================================    |  95%\n  |                                                                            \n  |===================================================================   |  96%\n  |                                                                            \n  |====================================================================  |  97%\n  |                                                                            \n  |====================================================================  |  98%\n  |                                                                            \n  |===================================================================== |  99%\n  |                                                                            \n  |======================================================================| 100%\n\n\n\n\n\n\n\nCode\n# Make Summary tables showing before and after data cleaning\n\nbefore_summary &lt;- tibble( Summary = \"Raw data\", Rows = nrow(property_sales), Columns = ncol(property_sales) )\n\nafter_summary &lt;- tibble( Summary = \"Cleaned data\", Rows = nrow(property_sales_res), Columns = ncol(property_sales_res) )\n\n# Combine into one summary table\n\nsummary_table &lt;- bind_rows(before_summary, after_summary)\n\n\n\n\n# A tibble: 2 × 3\n  Summary        Rows Columns\n  &lt;chr&gt;         &lt;int&gt;   &lt;int&gt;\n1 Raw data     583776      79\n2 Cleaned data  27357      80\n\n\n\n\n\nThe dataset initially had 583,776 properties. First we filtered properties based on their zoning code, only keeping those which were residential or ‘IRMX,’ meaning Industrial Residential Mixed Use. #Then to further ensure that we had only residential entries, we filtered for entries that had a category code of single family, multi family, or mixed use. To remove any egregious outliers we removed properties whose sale price was less than $5000 or greater than $10000000. Finally, we only kept sales that occurred in 2023 or 2024. Blank cells were recoded as ’NA.’The cleaned dataset had 27357 lines.\n\n\n\n\n\nCode\npark_properties &lt;- st_read(\"https://hub.arcgis.com/api/v3/datasets/d52445160ab14380a673e5849203eb64_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1\")\n\n\nReading layer `PPR_Properties' from data source \n  `https://hub.arcgis.com/api/v3/datasets/d52445160ab14380a673e5849203eb64_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1' \n  using driver `GeoJSON'\nSimple feature collection with 504 features and 25 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -75.28353 ymin: 39.87117 xmax: -74.95865 ymax: 40.13186\nGeodetic CRS:  WGS 84\n\n\nCode\nhospitals &lt;- st_read(\"https://opendata.arcgis.com/datasets/df8dc18412494e5abbb021e2f33057b2_0.geojson\")\n\n\nReading layer `8325e3d0-cbe5-4899-a21f-aa0870da62172020329-1-y8qn03.5pgx' from data source `https://opendata.arcgis.com/datasets/df8dc18412494e5abbb021e2f33057b2_0.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 36 features and 8 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -75.23027 ymin: 39.92185 xmax: -74.98149 ymax: 40.07901\nGeodetic CRS:  WGS 84\n\n\nCode\nfarmers_markets &lt;- st_read(\"https://hub.arcgis.com/api/v3/datasets/0707c1f31e2446e881d680b0a5ee54bc_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1\")\n\n\nReading layer `Farmers_Markets' from data source \n  `https://hub.arcgis.com/api/v3/datasets/0707c1f31e2446e881d680b0a5ee54bc_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1' \n  using driver `GeoJSON'\nSimple feature collection with 28 features and 53 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -75.22686 ymin: 39.92713 xmax: -75.07622 ymax: 40.07898\nGeodetic CRS:  WGS 84\n\n\nCode\nschools &lt;- st_read(\"https://hub.arcgis.com/api/v3/datasets/d46a7e59e2c246c891fbee778759717e_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1\")\n\n\nReading layer `Schools' from data source \n  `https://hub.arcgis.com/api/v3/datasets/d46a7e59e2c246c891fbee778759717e_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1' \n  using driver `GeoJSON'\nSimple feature collection with 495 features and 14 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -75.2665 ymin: 39.90781 xmax: -74.97057 ymax: 40.12974\nGeodetic CRS:  WGS 84\n\n\nCode\nlandmarks &lt;- st_read(\"https://hub.arcgis.com/api/v3/datasets/68628278b86244469d110232f81ea8f9_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1\")\n\n\nReading layer `Landmark_Points' from data source \n  `https://hub.arcgis.com/api/v3/datasets/68628278b86244469d110232f81ea8f9_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1' \n  using driver `GeoJSON'\nSimple feature collection with 1147 features and 20 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -75.28169 ymin: 39.85929 xmax: -74.96915 ymax: 40.11991\nGeodetic CRS:  WGS 84\n\n\nCode\nbike_network &lt;- st_read(\"https://hub.arcgis.com/api/v3/datasets/b5f660b9f0f44ced915995b6d49f6385_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1\")\n\n\nReading layer `Bike_Network' from data source \n  `https://hub.arcgis.com/api/v3/datasets/b5f660b9f0f44ced915995b6d49f6385_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1' \n  using driver `GeoJSON'\nSimple feature collection with 5225 features and 8 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: -75.26927 ymin: 39.87528 xmax: -74.96572 ymax: 40.124\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\n\nCode\nst_crs(property_sales_res) \n\n\nCoordinate Reference System: NA\n\n\nCode\nproperty_sales_res$geometry &lt;- st_as_sfc(property_sales_res$shape) \nres_properties_sf &lt;- st_sf(property_sales_res)\n\n# Transform CRS for Spatial Amenities - to match that of the property sales data\n\npark_properties &lt;- st_transform(park_properties, st_crs(res_properties_sf)) \nhospitals &lt;- st_transform(hospitals, st_crs(res_properties_sf)) \nfarmers_markets &lt;- st_transform(farmers_markets, st_crs(res_properties_sf)) \nschools &lt;- st_transform(schools, st_crs(res_properties_sf)) \nlandmarks &lt;- st_transform(landmarks, st_crs(res_properties_sf)) \nbike_network &lt;- st_transform(bike_network, st_crs(res_properties_sf))\n\n# Transform census data CRS - to match that of the property sales data\n\nst_crs(philadelphia) \n\n\nCoordinate Reference System:\n  User input: NAD83 \n  wkt:\nGEOGCRS[\"NAD83\",\n    DATUM[\"North American Datum 1983\",\n        ELLIPSOID[\"GRS 1980\",6378137,298.257222101,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4269]]\n\n\nCode\nphiladelphia &lt;- st_transform(philadelphia, st_crs(res_properties_sf))\n\n\n\n\n\n\n\nCode\nphiladelphia &lt;- philadelphia %&gt;%\n  mutate(census_tract = as.numeric(str_extract(NAME, \"(?&lt;=Census Tract )\\\\d+(\\\\.\\\\d+)?\")))\n\nres_properties_sf &lt;- st_join(res_properties_sf, philadelphia %&gt;% select(median_h_incomeE, total_populationE), left = TRUE)\n\n\n\n\n\n\n\nCode\n#1 Join parks data - What is the distance to the nearest park?**\n\n# Note that some of the parks are super tiny! It also includes playgrounds and rec centers, etc\n\n# Calculate distance matrix (properties to parks)\n\ndist_matrix_parks &lt;- st_distance(res_properties_sf, park_properties)\n\n# Function to get mean distance to k nearest neighbors\n\npark_distance &lt;- function(dist_matrix_parks, k) {\n  apply(dist_matrix_parks, 1, function(distances) { \n    # Sort distances and take the first k, then average\n    mean(as.numeric(sort(distances)[1:k]))\n  })\n}\n\n# Add nearest park distance as a column\n\nres_properties_sf &lt;- res_properties_sf %&gt;% mutate( nearest_park = park_distance(dist_matrix_parks, k = 1))\n\n#2 Join hospitals data - What is the distance to the nearest hospital?\n\n# Calculate distance matrix (properties to hospitals)\n\ndist_matrix_hospitals &lt;- st_distance(res_properties_sf, hospitals)\n\n# Function to get mean distance to k nearest neighbors\n\nhosp_distance &lt;- function(dist_matrix_hospitals, k) {\n  apply(dist_matrix_hospitals, 1, function(distances) {\n    # Sort distances, take the nearest k, then calculate the average\n    mean(as.numeric(sort(distances)[1:k]))\n  })\n}\n\n# Add nearest hospital distance as a column\n\nres_properties_sf &lt;- res_properties_sf %&gt;% mutate( nearest_hospital = hosp_distance(dist_matrix_hospitals, k = 1))\n\n#hospital distance in miles \nres_properties_sf &lt;- res_properties_sf %&gt;% mutate( nearest_hospital_mi = nearest_hospital/5280 )\n\n#3 Join farmers market data - what is the distance to the nearest farmers market?\n\n# Calculate distance matrix (properties to farmers markets)\n\ndist_matrix_market &lt;- st_distance(res_properties_sf, farmers_markets)\n\n# Function to get nearest distance\n\nmarket_distance &lt;- function(dist_matrix_market, k) {\n  apply(dist_matrix_market, 1, function(distances) {\n    # Sort and take first k, then average\n    mean(as.numeric(sort(distances)[1:k]))\n  })\n}\n\n# Add nearest farmer's market distance as a column\n\nres_properties_sf &lt;- res_properties_sf %&gt;% mutate(nearest_fmarket = market_distance(dist_matrix_market, k = 1))\n\n# market distance in miles\n\nres_properties_sf &lt;- res_properties_sf %&gt;% mutate(nearest_fmarket_mi = nearest_fmarket/5280)\n\n#4 Join landmark data - what is the distance to the nearest landmark?\n\n# Calculate distance matrix (properties to landmarks)\n\ndist_matrix_landmark &lt;- st_distance(res_properties_sf, landmarks)\n\n# Function to get nearest distance\n\nlandmark_distance &lt;- function(dist_matrix_landmark, k) {\n  apply(dist_matrix_landmark, 1, function(distances) {\n    # Sort distances, take the nearest k, then calculate their mean\n    mean(as.numeric(sort(distances)[1:k]))\n  })\n}\n\n# Add nearest landmark distance as a column\n\nres_properties_sf &lt;- res_properties_sf %&gt;% mutate( nearest_landmark = landmark_distance(dist_matrix_landmark, k = 1))\n\n# landmark distance in miles\n\nres_properties_sf &lt;- res_properties_sf %&gt;% mutate( nearest_landmark_mi = nearest_landmark/5280 )\n\n#5 Join school data - what is the distance to the nearest school?\n\n# Calculate distance matrix (properties to schools)\n\ndist_matrix_school &lt;- st_distance(res_properties_sf, schools)\n\n# Function to get nearest distance\n\nschool_distance &lt;- function(dist_matrix_school, k) {\n  apply(dist_matrix_school, 1, function(distances) {\n    # Sort and take first k, then average\n    mean(as.numeric(sort(distances)[1:k]))\n  })\n}\n\n# Add nearest farmer's market distance as a column\n\nres_properties_sf &lt;- res_properties_sf %&gt;% mutate( nearest_school = school_distance(dist_matrix_school, k = 1))\n\n# market distance in miles\n\nres_properties_sf &lt;- res_properties_sf %&gt;% mutate( nearest_school_mi = nearest_school/5280 )"
  },
  {
    "objectID": "labs/midterm/Abraham_Knox_Levin_Appendix.html#load-packages",
    "href": "labs/midterm/Abraham_Knox_Levin_Appendix.html#load-packages",
    "title": "Philadelphia Housing Model - Technical Appendix",
    "section": "",
    "text": "Code\nlibrary(sf)\n\n\nWarning: package 'sf' was built under R version 4.4.3\n\n\nLinking to GEOS 3.13.0, GDAL 3.10.1, PROJ 9.5.1; sf_use_s2() is TRUE\n\n\nCode\nlibrary(tidyverse)\n\n\nWarning: package 'ggplot2' was built under R version 4.4.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   4.0.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(tigris)\n\n\nTo enable caching of data, set `options(tigris_use_cache = TRUE)`\nin your R script or .Rprofile.\n\n\nCode\nlibrary(tidycensus)\nlibrary(scales)\n\n\nWarning: package 'scales' was built under R version 4.4.3\n\n\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\n\nCode\nlibrary(patchwork)\n\n\nWarning: package 'patchwork' was built under R version 4.4.3\n\n\nCode\nlibrary(here)\n\n\nWarning: package 'here' was built under R version 4.4.3\n\n\nhere() starts at C:/Users/annal/OneDrive/Documents/GitHub/portfolio-setup-annaliseabraham8-star/labs/midterm\n\n\nCode\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(kableExtra)\n\n\nWarning: package 'kableExtra' was built under R version 4.4.3\n\n\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n\n\nCode\nlibrary(ggplot2)\nlibrary(stringr)\nlibrary(units)\n\n\nudunits database from C:/Users/annal/AppData/Local/R/win-library/4.4/units/share/udunits/udunits2.xml\n\n\nCode\nlibrary(stargazer)\n\n\n\nPlease cite as: \n\n Hlavac, Marek (2022). stargazer: Well-Formatted Regression and Summary Statistics Tables.\n R package version 5.2.3. https://CRAN.R-project.org/package=stargazer \n\n\nCode\nlibrary(car)\n\n\nWarning: package 'car' was built under R version 4.4.3\n\n\nLoading required package: carData\n\n\nWarning: package 'carData' was built under R version 4.4.3\n\n\n\nAttaching package: 'car'\n\nThe following object is masked from 'package:dplyr':\n\n    recode\n\nThe following object is masked from 'package:purrr':\n\n    some\n\n\nCode\nlibrary(caret)\n\n\nWarning: package 'caret' was built under R version 4.4.3\n\n\nLoading required package: lattice\n\nAttaching package: 'caret'\n\nThe following object is masked from 'package:purrr':\n\n    lift\n\n\nCode\nlibrary(lmtest)\n\n\nWarning: package 'lmtest' was built under R version 4.4.3\n\n\nLoading required package: zoo\n\n\nWarning: package 'zoo' was built under R version 4.4.3\n\n\n\nAttaching package: 'zoo'\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\n\nCode\nlibrary(skimr)\n\n\nWarning: package 'skimr' was built under R version 4.4.3\n\n\nCode\nlibrary(ggfortify)\n\n\nWarning: package 'ggfortify' was built under R version 4.4.3"
  },
  {
    "objectID": "labs/midterm/Abraham_Knox_Levin_Appendix.html#clean-property-data",
    "href": "labs/midterm/Abraham_Knox_Levin_Appendix.html#clean-property-data",
    "title": "Philadelphia Housing Model - Technical Appendix",
    "section": "",
    "text": "Code\nproperty_sales &lt;- st_read(\"https://github.com/MUSA-5080-Fall-2025/MUSA-5080-Fall-2025/releases/download/v1.0.0/opa_properties_public.csv\")\n\n\nReading layer `_gdal_http_opa_properties_public' from data source \n  `https://github.com/MUSA-5080-Fall-2025/MUSA-5080-Fall-2025/releases/download/v1.0.0/opa_properties_public.csv' \n  using driver `CSV'\n\n\nWarning: no simple feature geometries present: returning a data.frame or tbl_df\n\n\nCode\nproperty_sales_res &lt;- property_sales %&gt;% filter(str_detect(zoning, \"^R\") | str_detect(zoning, \"IRMX\")) %&gt;% filter(str_detect(category_code_description, \"SINGLE FAMILY\") | str_detect(category_code_description, \"MULTI FAMILY\") | str_detect(category_code_description, \"MIXED USE\")) %&gt;% mutate(sale_price_n = as.numeric(sale_price)) %&gt;% filter(sale_price_n &lt; 10000000) %&gt;% filter(sale_date &gt;= as.Date(\"2023-01-01\") & sale_date &lt;= as.Date(\"2024-12-31\") )\n\nproperty_sales_res &lt;- property_sales_res %&gt;% filter(sale_price_n&lt;10000000 & sale_price_n &gt; 5000)\n\nggplot(property_sales_res, aes(x = sale_date, y = sale_price_n)) + geom_point()\n\n\n\n\n\n\n\n\n\nCode\nggplot(property_sales_res, aes(x = number_of_bedrooms, y = sale_price_n)) + geom_point()\n\n\n\n\n\n\n\n\n\nCode\n#Converting blank cells to NA \ncolSums(property_sales_res == \"\")\n\n\n                     objectid               assessment_date \n                            0                             0 \n                    basements               beginning_point \n                         4454                           451 \n                book_and_page                 building_code \n                            2                            12 \n    building_code_description                 category_code \n                           15                             0 \n    category_code_description                  census_tract \n                            0                             0 \n                  central_air               cross_reference \n                         4993                         27357 \n      date_exterior_condition                         depth \n                        27357                           187 \n              exempt_building                   exempt_land \n                            0                             0 \n           exterior_condition                    fireplaces \n                           11                           944 \n                     frontage                          fuel \n                          189                          8761 \n                garage_spaces                   garage_type \n                         1088                         10974 \n         general_construction               geographic_ward \n                          244                             0 \n          homestead_exemption               house_extension \n                            0                         26867 \n                 house_number            interior_condition \n                            0                            12 \n                     location             mailing_address_1 \n                            0                          3528 \n            mailing_address_2               mailing_care_of \n                        27357                         27347 \n           mailing_city_state                mailing_street \n                           63                           260 \n                  mailing_zip                  market_value \n                           88                             0 \n            market_value_date           number_of_bathrooms \n                        27357                          1038 \n           number_of_bedrooms               number_of_rooms \n                          232                         25771 \n               number_stories               off_street_open \n                          135                           326 \n               other_building                       owner_1 \n                        27330                             0 \n                      owner_2                 parcel_number \n                        18840                             0 \n                 parcel_shape                 quality_grade \n                           35                          1046 \n               recording_date               registry_number \n                            0                           106 \n                    sale_date                    sale_price \n                            0                             0 \n           separate_utilities                         sewer \n                        25361                         23810 \n                    site_type                    state_code \n                        27357                            62 \n                  street_code            street_designation \n                            0                             0 \n             street_direction                   street_name \n                        17229                             0 \n                       suffix              taxable_building \n                        27339                             0 \n                 taxable_land                    topography \n                            0                           478 \n                   total_area            total_livable_area \n                            6                             9 \n                  type_heater                    unfinished \n                         3738                         27357 \n                         unit                       utility \n                        25513                         27357 \n                    view_type                    year_built \n                          178                             9 \n          year_built_estimate                      zip_code \n                         5659                             0 \n                       zoning                           pin \n                            0                             0 \n            building_code_new building_code_description_new \n                           39                          1676 \n                        shape                  sale_price_n \n                            0                             0 \n\n\nCode\nproperty_sales_res &lt;- as.data.frame(lapply(property_sales_res, function(x) { \n  x &lt;- trimws(x) # remove leading/trailing spaces x[x == \"\"] &lt;- NA \n  return(x) }))\n\ncolSums(is.na(property_sales_res))\n\n\n                     objectid               assessment_date \n                            0                             0 \n                    basements               beginning_point \n                            0                             0 \n                book_and_page                 building_code \n                            0                             0 \n    building_code_description                 category_code \n                            0                             0 \n    category_code_description                  census_tract \n                            0                             0 \n                  central_air               cross_reference \n                            0                             0 \n      date_exterior_condition                         depth \n                            0                             0 \n              exempt_building                   exempt_land \n                            0                             0 \n           exterior_condition                    fireplaces \n                            0                             0 \n                     frontage                          fuel \n                            0                             0 \n                garage_spaces                   garage_type \n                            0                             0 \n         general_construction               geographic_ward \n                            0                             0 \n          homestead_exemption               house_extension \n                            0                             0 \n                 house_number            interior_condition \n                            0                             0 \n                     location             mailing_address_1 \n                            0                             0 \n            mailing_address_2               mailing_care_of \n                            0                             0 \n           mailing_city_state                mailing_street \n                            0                             0 \n                  mailing_zip                  market_value \n                            0                             0 \n            market_value_date           number_of_bathrooms \n                            0                             0 \n           number_of_bedrooms               number_of_rooms \n                            0                             0 \n               number_stories               off_street_open \n                            0                             0 \n               other_building                       owner_1 \n                            0                             0 \n                      owner_2                 parcel_number \n                            0                             0 \n                 parcel_shape                 quality_grade \n                            0                             0 \n               recording_date               registry_number \n                            0                             0 \n                    sale_date                    sale_price \n                            0                             0 \n           separate_utilities                         sewer \n                            0                             0 \n                    site_type                    state_code \n                            0                             0 \n                  street_code            street_designation \n                            0                             0 \n             street_direction                   street_name \n                            0                             0 \n                       suffix              taxable_building \n                            0                             0 \n                 taxable_land                    topography \n                            0                             0 \n                   total_area            total_livable_area \n                            0                             0 \n                  type_heater                    unfinished \n                            0                             0 \n                         unit                       utility \n                            0                             0 \n                    view_type                    year_built \n                            0                             0 \n          year_built_estimate                      zip_code \n                            0                             0 \n                       zoning                           pin \n                            0                             0 \n            building_code_new building_code_description_new \n                            0                             0 \n                        shape                  sale_price_n \n                            0                             0"
  },
  {
    "objectID": "labs/midterm/Abraham_Knox_Levin_Appendix.html#load-census-data",
    "href": "labs/midterm/Abraham_Knox_Levin_Appendix.html#load-census-data",
    "title": "Philadelphia Housing Model - Technical Appendix",
    "section": "",
    "text": "Code\ncensus_api_key(\"5a82e243438bea307ae1c04f150d539c4db5fa47\", install = FALSE) \n\n\nTo install your API key for use in future sessions, run this function with `install = TRUE`.\n\n\nCode\nphiladelphia &lt;- get_acs( geography = \"tract\", county = \"Philadelphia\", state = \"PA\", variables = c(median_h_income = \"B19013_001\", total_population = \"B01003_001\"), survey = \"acs5\", year = 2023, output = \"wide\", geometry = TRUE )\n\n\nGetting data from the 2019-2023 5-year ACS\n\n\nDownloading feature geometry from the Census website.  To cache shapefiles for use in future sessions, set `options(tigris_use_cache = TRUE)`.\n\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |                                                                      |   1%\n  |                                                                            \n  |=                                                                     |   1%\n  |                                                                            \n  |=                                                                     |   2%\n  |                                                                            \n  |==                                                                    |   2%\n  |                                                                            \n  |==                                                                    |   3%\n  |                                                                            \n  |==                                                                    |   4%\n  |                                                                            \n  |===                                                                   |   4%\n  |                                                                            \n  |===                                                                   |   5%\n  |                                                                            \n  |====                                                                  |   5%\n  |                                                                            \n  |====                                                                  |   6%\n  |                                                                            \n  |=====                                                                 |   7%\n  |                                                                            \n  |=====                                                                 |   8%\n  |                                                                            \n  |======                                                                |   8%\n  |                                                                            \n  |======                                                                |   9%\n  |                                                                            \n  |=======                                                               |   9%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |=======                                                               |  11%\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |========                                                              |  12%\n  |                                                                            \n  |=========                                                             |  12%\n  |                                                                            \n  |=========                                                             |  13%\n  |                                                                            \n  |==========                                                            |  14%\n  |                                                                            \n  |===========                                                           |  15%\n  |                                                                            \n  |===========                                                           |  16%\n  |                                                                            \n  |============                                                          |  17%\n  |                                                                            \n  |=============                                                         |  18%\n  |                                                                            \n  |==============                                                        |  19%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |===============                                                       |  21%\n  |                                                                            \n  |================                                                      |  22%\n  |                                                                            \n  |================                                                      |  23%\n  |                                                                            \n  |=================                                                     |  24%\n  |                                                                            \n  |==================                                                    |  25%\n  |                                                                            \n  |==================                                                    |  26%\n  |                                                                            \n  |===================                                                   |  27%\n  |                                                                            \n  |====================                                                  |  28%\n  |                                                                            \n  |====================                                                  |  29%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |======================                                                |  31%\n  |                                                                            \n  |======================                                                |  32%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |========================                                              |  34%\n  |                                                                            \n  |========================                                              |  35%\n  |                                                                            \n  |=========================                                             |  36%\n  |                                                                            \n  |==========================                                            |  37%\n  |                                                                            \n  |===========================                                           |  38%\n  |                                                                            \n  |===========================                                           |  39%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |=============================                                         |  41%\n  |                                                                            \n  |=============================                                         |  42%\n  |                                                                            \n  |==============================                                        |  43%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |===============================                                       |  45%\n  |                                                                            \n  |================================                                      |  46%\n  |                                                                            \n  |=================================                                     |  47%\n  |                                                                            \n  |=================================                                     |  48%\n  |                                                                            \n  |==================================                                    |  49%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |===================================                                   |  51%\n  |                                                                            \n  |====================================                                  |  52%\n  |                                                                            \n  |=====================================                                 |  53%\n  |                                                                            \n  |======================================                                |  54%\n  |                                                                            \n  |======================================                                |  55%\n  |                                                                            \n  |=======================================                               |  56%\n  |                                                                            \n  |========================================                              |  57%\n  |                                                                            \n  |========================================                              |  58%\n  |                                                                            \n  |=========================================                             |  59%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |===========================================                           |  61%\n  |                                                                            \n  |============================================                          |  62%\n  |                                                                            \n  |============================================                          |  63%\n  |                                                                            \n  |=============================================                         |  64%\n  |                                                                            \n  |==============================================                        |  65%\n  |                                                                            \n  |==============================================                        |  66%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |================================================                      |  68%\n  |                                                                            \n  |=================================================                     |  69%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |==================================================                    |  71%\n  |                                                                            \n  |===================================================                   |  72%\n  |                                                                            \n  |===================================================                   |  73%\n  |                                                                            \n  |====================================================                  |  74%\n  |                                                                            \n  |=====================================================                 |  75%\n  |                                                                            \n  |=====================================================                 |  76%\n  |                                                                            \n  |======================================================                |  77%\n  |                                                                            \n  |=======================================================               |  78%\n  |                                                                            \n  |=======================================================               |  79%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |=========================================================             |  81%\n  |                                                                            \n  |=========================================================             |  82%\n  |                                                                            \n  |==========================================================            |  83%\n  |                                                                            \n  |===========================================================           |  84%\n  |                                                                            \n  |============================================================          |  85%\n  |                                                                            \n  |============================================================          |  86%\n  |                                                                            \n  |=============================================================         |  87%\n  |                                                                            \n  |==============================================================        |  88%\n  |                                                                            \n  |==============================================================        |  89%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |================================================================      |  91%\n  |                                                                            \n  |================================================================      |  92%\n  |                                                                            \n  |=================================================================     |  93%\n  |                                                                            \n  |==================================================================    |  94%\n  |                                                                            \n  |==================================================================    |  95%\n  |                                                                            \n  |===================================================================   |  96%\n  |                                                                            \n  |====================================================================  |  97%\n  |                                                                            \n  |====================================================================  |  98%\n  |                                                                            \n  |===================================================================== |  99%\n  |                                                                            \n  |======================================================================| 100%"
  },
  {
    "objectID": "labs/midterm/Abraham_Knox_Levin_Appendix.html#data-cleaning-summary",
    "href": "labs/midterm/Abraham_Knox_Levin_Appendix.html#data-cleaning-summary",
    "title": "Philadelphia Housing Model - Technical Appendix",
    "section": "",
    "text": "Code\n# Make Summary tables showing before and after data cleaning\n\nbefore_summary &lt;- tibble( Summary = \"Raw data\", Rows = nrow(property_sales), Columns = ncol(property_sales) )\n\nafter_summary &lt;- tibble( Summary = \"Cleaned data\", Rows = nrow(property_sales_res), Columns = ncol(property_sales_res) )\n\n# Combine into one summary table\n\nsummary_table &lt;- bind_rows(before_summary, after_summary)\n\n\n\n\n# A tibble: 2 × 3\n  Summary        Rows Columns\n  &lt;chr&gt;         &lt;int&gt;   &lt;int&gt;\n1 Raw data     583776      79\n2 Cleaned data  27357      80"
  },
  {
    "objectID": "labs/midterm/Abraham_Knox_Levin_Appendix.html#data-cleaning-narrative",
    "href": "labs/midterm/Abraham_Knox_Levin_Appendix.html#data-cleaning-narrative",
    "title": "Philadelphia Housing Model - Technical Appendix",
    "section": "",
    "text": "The dataset initially had 583,776 properties. First we filtered properties based on their zoning code, only keeping those which were residential or ‘IRMX,’ meaning Industrial Residential Mixed Use. #Then to further ensure that we had only residential entries, we filtered for entries that had a category code of single family, multi family, or mixed use. To remove any egregious outliers we removed properties whose sale price was less than $5000 or greater than $10000000. Finally, we only kept sales that occurred in 2023 or 2024. Blank cells were recoded as ’NA.’The cleaned dataset had 27357 lines."
  },
  {
    "objectID": "labs/midterm/Abraham_Knox_Levin_Appendix.html#load-spatial-amenities-data",
    "href": "labs/midterm/Abraham_Knox_Levin_Appendix.html#load-spatial-amenities-data",
    "title": "Philadelphia Housing Model - Technical Appendix",
    "section": "",
    "text": "Code\npark_properties &lt;- st_read(\"https://hub.arcgis.com/api/v3/datasets/d52445160ab14380a673e5849203eb64_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1\")\n\n\nReading layer `PPR_Properties' from data source \n  `https://hub.arcgis.com/api/v3/datasets/d52445160ab14380a673e5849203eb64_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1' \n  using driver `GeoJSON'\nSimple feature collection with 504 features and 25 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -75.28353 ymin: 39.87117 xmax: -74.95865 ymax: 40.13186\nGeodetic CRS:  WGS 84\n\n\nCode\nhospitals &lt;- st_read(\"https://opendata.arcgis.com/datasets/df8dc18412494e5abbb021e2f33057b2_0.geojson\")\n\n\nReading layer `8325e3d0-cbe5-4899-a21f-aa0870da62172020329-1-y8qn03.5pgx' from data source `https://opendata.arcgis.com/datasets/df8dc18412494e5abbb021e2f33057b2_0.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 36 features and 8 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -75.23027 ymin: 39.92185 xmax: -74.98149 ymax: 40.07901\nGeodetic CRS:  WGS 84\n\n\nCode\nfarmers_markets &lt;- st_read(\"https://hub.arcgis.com/api/v3/datasets/0707c1f31e2446e881d680b0a5ee54bc_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1\")\n\n\nReading layer `Farmers_Markets' from data source \n  `https://hub.arcgis.com/api/v3/datasets/0707c1f31e2446e881d680b0a5ee54bc_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1' \n  using driver `GeoJSON'\nSimple feature collection with 28 features and 53 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -75.22686 ymin: 39.92713 xmax: -75.07622 ymax: 40.07898\nGeodetic CRS:  WGS 84\n\n\nCode\nschools &lt;- st_read(\"https://hub.arcgis.com/api/v3/datasets/d46a7e59e2c246c891fbee778759717e_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1\")\n\n\nReading layer `Schools' from data source \n  `https://hub.arcgis.com/api/v3/datasets/d46a7e59e2c246c891fbee778759717e_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1' \n  using driver `GeoJSON'\nSimple feature collection with 495 features and 14 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -75.2665 ymin: 39.90781 xmax: -74.97057 ymax: 40.12974\nGeodetic CRS:  WGS 84\n\n\nCode\nlandmarks &lt;- st_read(\"https://hub.arcgis.com/api/v3/datasets/68628278b86244469d110232f81ea8f9_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1\")\n\n\nReading layer `Landmark_Points' from data source \n  `https://hub.arcgis.com/api/v3/datasets/68628278b86244469d110232f81ea8f9_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1' \n  using driver `GeoJSON'\nSimple feature collection with 1147 features and 20 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -75.28169 ymin: 39.85929 xmax: -74.96915 ymax: 40.11991\nGeodetic CRS:  WGS 84\n\n\nCode\nbike_network &lt;- st_read(\"https://hub.arcgis.com/api/v3/datasets/b5f660b9f0f44ced915995b6d49f6385_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1\")\n\n\nReading layer `Bike_Network' from data source \n  `https://hub.arcgis.com/api/v3/datasets/b5f660b9f0f44ced915995b6d49f6385_0/downloads/data?format=geojson&spatialRefId=4326&where=1%3D1' \n  using driver `GeoJSON'\nSimple feature collection with 5225 features and 8 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: -75.26927 ymin: 39.87528 xmax: -74.96572 ymax: 40.124\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "labs/midterm/Abraham_Knox_Levin_Appendix.html#transform-data-to-sf-objects-and-match-all-crs",
    "href": "labs/midterm/Abraham_Knox_Levin_Appendix.html#transform-data-to-sf-objects-and-match-all-crs",
    "title": "Philadelphia Housing Model - Technical Appendix",
    "section": "",
    "text": "Code\nst_crs(property_sales_res) \n\n\nCoordinate Reference System: NA\n\n\nCode\nproperty_sales_res$geometry &lt;- st_as_sfc(property_sales_res$shape) \nres_properties_sf &lt;- st_sf(property_sales_res)\n\n# Transform CRS for Spatial Amenities - to match that of the property sales data\n\npark_properties &lt;- st_transform(park_properties, st_crs(res_properties_sf)) \nhospitals &lt;- st_transform(hospitals, st_crs(res_properties_sf)) \nfarmers_markets &lt;- st_transform(farmers_markets, st_crs(res_properties_sf)) \nschools &lt;- st_transform(schools, st_crs(res_properties_sf)) \nlandmarks &lt;- st_transform(landmarks, st_crs(res_properties_sf)) \nbike_network &lt;- st_transform(bike_network, st_crs(res_properties_sf))\n\n# Transform census data CRS - to match that of the property sales data\n\nst_crs(philadelphia) \n\n\nCoordinate Reference System:\n  User input: NAD83 \n  wkt:\nGEOGCRS[\"NAD83\",\n    DATUM[\"North American Datum 1983\",\n        ELLIPSOID[\"GRS 1980\",6378137,298.257222101,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4269]]\n\n\nCode\nphiladelphia &lt;- st_transform(philadelphia, st_crs(res_properties_sf))"
  },
  {
    "objectID": "labs/midterm/Abraham_Knox_Levin_Appendix.html#join-census-data-to-property-sales-data",
    "href": "labs/midterm/Abraham_Knox_Levin_Appendix.html#join-census-data-to-property-sales-data",
    "title": "Philadelphia Housing Model - Technical Appendix",
    "section": "",
    "text": "Code\nphiladelphia &lt;- philadelphia %&gt;%\n  mutate(census_tract = as.numeric(str_extract(NAME, \"(?&lt;=Census Tract )\\\\d+(\\\\.\\\\d+)?\")))\n\nres_properties_sf &lt;- st_join(res_properties_sf, philadelphia %&gt;% select(median_h_incomeE, total_populationE), left = TRUE)"
  },
  {
    "objectID": "labs/midterm/Abraham_Knox_Levin_Appendix.html#join-spatial-amenities-data",
    "href": "labs/midterm/Abraham_Knox_Levin_Appendix.html#join-spatial-amenities-data",
    "title": "Philadelphia Housing Model - Technical Appendix",
    "section": "",
    "text": "Code\n#1 Join parks data - What is the distance to the nearest park?**\n\n# Note that some of the parks are super tiny! It also includes playgrounds and rec centers, etc\n\n# Calculate distance matrix (properties to parks)\n\ndist_matrix_parks &lt;- st_distance(res_properties_sf, park_properties)\n\n# Function to get mean distance to k nearest neighbors\n\npark_distance &lt;- function(dist_matrix_parks, k) {\n  apply(dist_matrix_parks, 1, function(distances) { \n    # Sort distances and take the first k, then average\n    mean(as.numeric(sort(distances)[1:k]))\n  })\n}\n\n# Add nearest park distance as a column\n\nres_properties_sf &lt;- res_properties_sf %&gt;% mutate( nearest_park = park_distance(dist_matrix_parks, k = 1))\n\n#2 Join hospitals data - What is the distance to the nearest hospital?\n\n# Calculate distance matrix (properties to hospitals)\n\ndist_matrix_hospitals &lt;- st_distance(res_properties_sf, hospitals)\n\n# Function to get mean distance to k nearest neighbors\n\nhosp_distance &lt;- function(dist_matrix_hospitals, k) {\n  apply(dist_matrix_hospitals, 1, function(distances) {\n    # Sort distances, take the nearest k, then calculate the average\n    mean(as.numeric(sort(distances)[1:k]))\n  })\n}\n\n# Add nearest hospital distance as a column\n\nres_properties_sf &lt;- res_properties_sf %&gt;% mutate( nearest_hospital = hosp_distance(dist_matrix_hospitals, k = 1))\n\n#hospital distance in miles \nres_properties_sf &lt;- res_properties_sf %&gt;% mutate( nearest_hospital_mi = nearest_hospital/5280 )\n\n#3 Join farmers market data - what is the distance to the nearest farmers market?\n\n# Calculate distance matrix (properties to farmers markets)\n\ndist_matrix_market &lt;- st_distance(res_properties_sf, farmers_markets)\n\n# Function to get nearest distance\n\nmarket_distance &lt;- function(dist_matrix_market, k) {\n  apply(dist_matrix_market, 1, function(distances) {\n    # Sort and take first k, then average\n    mean(as.numeric(sort(distances)[1:k]))\n  })\n}\n\n# Add nearest farmer's market distance as a column\n\nres_properties_sf &lt;- res_properties_sf %&gt;% mutate(nearest_fmarket = market_distance(dist_matrix_market, k = 1))\n\n# market distance in miles\n\nres_properties_sf &lt;- res_properties_sf %&gt;% mutate(nearest_fmarket_mi = nearest_fmarket/5280)\n\n#4 Join landmark data - what is the distance to the nearest landmark?\n\n# Calculate distance matrix (properties to landmarks)\n\ndist_matrix_landmark &lt;- st_distance(res_properties_sf, landmarks)\n\n# Function to get nearest distance\n\nlandmark_distance &lt;- function(dist_matrix_landmark, k) {\n  apply(dist_matrix_landmark, 1, function(distances) {\n    # Sort distances, take the nearest k, then calculate their mean\n    mean(as.numeric(sort(distances)[1:k]))\n  })\n}\n\n# Add nearest landmark distance as a column\n\nres_properties_sf &lt;- res_properties_sf %&gt;% mutate( nearest_landmark = landmark_distance(dist_matrix_landmark, k = 1))\n\n# landmark distance in miles\n\nres_properties_sf &lt;- res_properties_sf %&gt;% mutate( nearest_landmark_mi = nearest_landmark/5280 )\n\n#5 Join school data - what is the distance to the nearest school?\n\n# Calculate distance matrix (properties to schools)\n\ndist_matrix_school &lt;- st_distance(res_properties_sf, schools)\n\n# Function to get nearest distance\n\nschool_distance &lt;- function(dist_matrix_school, k) {\n  apply(dist_matrix_school, 1, function(distances) {\n    # Sort and take first k, then average\n    mean(as.numeric(sort(distances)[1:k]))\n  })\n}\n\n# Add nearest farmer's market distance as a column\n\nres_properties_sf &lt;- res_properties_sf %&gt;% mutate( nearest_school = school_distance(dist_matrix_school, k = 1))\n\n# market distance in miles\n\nres_properties_sf &lt;- res_properties_sf %&gt;% mutate( nearest_school_mi = nearest_school/5280 )"
  },
  {
    "objectID": "labs/midterm/Abraham_Knox_Levin_Appendix.html#geographic-distribution-map",
    "href": "labs/midterm/Abraham_Knox_Levin_Appendix.html#geographic-distribution-map",
    "title": "Philadelphia Housing Model - Technical Appendix",
    "section": "#1 Geographic Distribution (Map)",
    "text": "#1 Geographic Distribution (Map)\n\n\nCode\nres_properties_sf &lt;- res_properties_sf %&gt;% mutate(sale_price_n = as.numeric(sale_price_n))\n\n# Map of Sale Prices\n\nggplot(res_properties_sf) + geom_sf(aes(color = sale_price_n), size = 1, alpha = 0.7) + scale_color_viridis_c(option = \"turbo\", labels = scales::dollar) + labs( title = \"Distribution of Sale Prices in Philadelphia\", color = \"Home Price\" ) + theme_minimal()\n\n\n\n\n\n\n\n\n\n\nInterpretation:\nThis map visualizes residential property sales across Philadelphia during 2023–2024, with each point representing a single sale and color indicating the sale price. The full range of values is very hard to see on this map because while there is a large range of values, going beyond $8 million, most of them fall on the much lower end of the spectrum. This causes the map to appear mostly one uniform shade of navy blue. A number of higher valued properties (shown in light blue and representing homes just under $2 million) can be seen clustered in northwest Philadelphia and around center city.\n\n\nMap of Sale Prices - Log Transformed\n\n\nCode\nggplot() + geom_sf(data = philadelphia, fill = \"gray95\", color = \"white\") + geom_sf(data = res_properties_sf, aes(color = log10(sale_price_n)), size = 1.5, alpha = 0.7) + scale_color_viridis_c( option = \"plasma\", labels = function(x) dollar(10^x), name = \"Sale Price (log scale)\" ) + labs( title = \"Residential Property Sale Prices in Philadelphia\", subtitle = \"Log-scaled price visualization\", caption = \"Data: Property Sales from 2023, 2024\" ) + theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nInterpretation:\nThis map visualizes residential property sales across Philadelphia during 2023–2024, with each point representing a single sale and color indicating the sale price on a logarithmic scale. Using a log scale allows for clearer visualization of the wide range of property values, compressing extremely high prices while preserving overall spatial variation. The pattern reveals clear geographic differences in housing markets: higher sale prices (yellow to orange) are concentrated in central and northwestern neighborhoods—such as Center City, University City, and Chestnut Hill—while lower prices (purple) are more common in much of North and Southwest Philadelphia. These spatial patterns highlight the city’s pronounced housing value disparities, reflecting broader socioeconomic divides. They also show potential gentrification pressures in the areas where low- and mid-priced neighborhoods intersect."
  },
  {
    "objectID": "labs/midterm/Abraham_Knox_Levin_Appendix.html#distribution-of-sale-prices-histogram",
    "href": "labs/midterm/Abraham_Knox_Levin_Appendix.html#distribution-of-sale-prices-histogram",
    "title": "Philadelphia Housing Model - Technical Appendix",
    "section": "#2 Distribution of Sale Prices (Histogram)",
    "text": "#2 Distribution of Sale Prices (Histogram)\n\n\nCode\nggplot(res_properties_sf, aes(x = sale_price_n)) + geom_histogram(bins = 40, fill = \"steelblue\", color = \"white\", alpha = 0.8) + scale_x_continuous(labels = scales::dollar) + labs( title = \"Distribution of Residential Sale Prices in Philadelphia\", subtitle = \"Data from 2023, 2024\", x = \"Sale Price (USD)\", y = \"Number of Properties\" ) + theme_minimal()\n\n\n\n\n\n\n\n\n\n\nInterpretation:\nThis histogram illustrates the distribution of residential property sale prices in Philadelphia for the years 2023–2024. The data are highly right-skewed, meaning most properties sold at relatively low prices, while a small number of transactions occurred at very high prices. The vast majority of sales cluster below about $500,000, with a sharp peak near the lower end of the price range. Only a few properties sold for prices above $1 million, indicating that such high-value transactions are rare.\n\n\nSale Prices Histogram - Log Transformed\n\n\nCode\nggplot(res_properties_sf, aes(x = sale_price_n)) + geom_histogram(bins = 40, fill = \"darkorange\", color = \"white\", alpha = 0.8) + scale_x_log10(labels = dollar) + labs( title = \"Residential Sale Prices in Philadelphia (Log Scale)\", subtitle = \"Data from 2023, 2024\", x = \"Sale Price (log10 USD)\", y = \"Number of Properties\" ) + theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nInterpretation:\nThis histogram displays the distribution of residential sale prices in Philadelphia (2023–2024) on a logarithmic scale, which makes the skewed price data easier to interpret. The distribution appears roughly bell-shaped, indicating that the underlying price data follow a log-normal distribution. Most residential properties sold for between $100,000 and $1,000,000, forming the central peak of the distribution. Fewer homes sold at very low or very high prices, shown by the tapering tails on both sides."
  },
  {
    "objectID": "labs/midterm/Abraham_Knox_Levin_Appendix.html#price-vs.-structural-features---scatter-plot-price-vs.-number-of-bedrooms",
    "href": "labs/midterm/Abraham_Knox_Levin_Appendix.html#price-vs.-structural-features---scatter-plot-price-vs.-number-of-bedrooms",
    "title": "Philadelphia Housing Model - Technical Appendix",
    "section": "#3 Price vs. Structural Features - Scatter Plot Price vs. Number of Bedrooms",
    "text": "#3 Price vs. Structural Features - Scatter Plot Price vs. Number of Bedrooms\n\n\nCode\nres_properties_sf &lt;- res_properties_sf %&gt;%             mutate(number_of_bedrooms = as.numeric(number_of_bedrooms))\n\nggplot( data = res_properties_sf %&gt;% filter(!is.na(number_of_bedrooms)), aes(x = number_of_bedrooms, y = sale_price_n) ) + geom_point(color = \"steelblue\", alpha = 0.6, size = 2) + geom_smooth(method = \"lm\", color = \"darkorange\", se = TRUE) + scale_y_continuous(labels = scales::dollar) + labs( title = \"Residential Sale Prices by Number of Bedrooms\", subtitle = \"Data from 2023, 2024 Philadelphia\", x = \"Number of Bedrooms\", y = \"Sale Price (USD)\" ) + theme_minimal()\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\nInterpretation:\nThe scatter plot shows the relationship between the number of bedrooms in residential properties and their sale prices in Philadelphia for 2023 and 2024. The trend line does indicate a general upward trajectory, suggesting that sale prices tend to increase as the number of bedrooms increases. At the same time, the data shows a wide range of sale prices within each bedroom category, indicating that other factors such as neighborhood location, property condition, amenities, and lot size also have a large influence on overall value. In each bedroom category, most of the properties are valued below $2,000,000. There are also many high outliers in each category, meaning that for luxury properties the number of bedrooms is not highly associated with the value. Also, beyond 6 bedrooms, the sale prices begin to taper off, suggesting that at that point additional bedrooms have a diminishing return."
  },
  {
    "objectID": "labs/midterm/Abraham_Knox_Levin_Appendix.html#price-vs.-spatial-features---scatter-plot",
    "href": "labs/midterm/Abraham_Knox_Levin_Appendix.html#price-vs.-spatial-features---scatter-plot",
    "title": "Philadelphia Housing Model - Technical Appendix",
    "section": "#4 Price vs. Spatial Features - Scatter Plot",
    "text": "#4 Price vs. Spatial Features - Scatter Plot"
  },
  {
    "objectID": "labs/midterm/Abraham_Knox_Levin_Appendix.html#price-vs.-distance-to-nearest-farmers-market",
    "href": "labs/midterm/Abraham_Knox_Levin_Appendix.html#price-vs.-distance-to-nearest-farmers-market",
    "title": "Philadelphia Housing Model - Technical Appendix",
    "section": "Price vs. Distance to Nearest Farmer’s Market",
    "text": "Price vs. Distance to Nearest Farmer’s Market\n\n\nCode\nggplot( data = res_properties_sf, aes(x = nearest_fmarket_mi, y = sale_price_n) ) + geom_point(color = \"steelblue\", alpha = 0.6, size = 2) + scale_y_continuous(labels = scales::dollar) + labs( title = \"Residential Sale Prices by Nearest Market\", subtitle = \"Data from 2023, 2024 Philadelphia\", x = \"Distance to Nearest Farmer's Market, Miles\", y = \"Sale Price (USD)\" ) + theme_minimal()\n\n\n\n\n\n\n\n\n\n\nInterpretation:\nThe scatter plot shows the relationship between the distance to the nearest farmers’ market and the sale price. The highest valued properties are clustered within 1 mile from a market. Beyond 2 miles, the values fall sharply. This suggests that proximity to farmers markets does to some degree play a role in sale value. However, it is almost important to note that there is a very wide range or properties within 1 mile. Overall this graphic is most revealing about the proximity of high end properties to farmers markets."
  },
  {
    "objectID": "labs/midterm/Abraham_Knox_Levin_Appendix.html#creative-visualization-choropleth-map-of-median-prices-and-median-income",
    "href": "labs/midterm/Abraham_Knox_Levin_Appendix.html#creative-visualization-choropleth-map-of-median-prices-and-median-income",
    "title": "Philadelphia Housing Model - Technical Appendix",
    "section": "#5 Creative Visualization: Choropleth Map of Median Prices and Median Income",
    "text": "#5 Creative Visualization: Choropleth Map of Median Prices and Median Income\n\n\nCode\ntract_level_data &lt;- res_properties_sf %&gt;%\n  st_drop_geometry() %&gt;%            # remove geometry for calculation\n  group_by(census_tract) %&gt;%\n  summarize(\n    median_price = median(sale_price_n, na.rm = TRUE),\n    median_income = median(median_h_incomeE, na.rm = TRUE)  # ensure tract-level summary\n  )\n\ntract_level_data &lt;- tract_level_data %&gt;% mutate(census_tract = as.numeric(census_tract))\n\ntracts_merged &lt;- philadelphia %&gt;% left_join(tract_level_data, by = c(\"census_tract\"))\n\ntracts_merged &lt;- tracts_merged %&gt;% mutate( income_cat = cut(median_income, breaks = quantile(median_income, probs = seq(0, 1, 0.33), na.rm = TRUE), include.lowest = TRUE, labels = c(\"Low Income\", \"Medium Income\", \"High Income\")), price_cat = cut(median_price, breaks = quantile(median_price, probs = seq(0, 1, 0.33), na.rm = TRUE), include.lowest = TRUE, labels = c(\"Low Price\", \"Medium Price\", \"High Price\")), bivariate_cat = interaction(income_cat, price_cat, sep = \"-\") )\n\n# Define bivariate color palette\n\nbivariate_colors &lt;- c( \"Low Income-Low Price\" = \"#e8e8e8\", \"Medium Income-Low Price\" = \"#ace4e4\", \"High Income-Low Price\" = \"#5ac8c8\", \"Low Income-Medium Price\" = \"#dfb0d6\", \"Medium Income-Medium Price\" = \"#a5add3\", \"High Income-Medium Price\" = \"#5698b9\", \"Low Income-High Price\" = \"#be64ac\", \"Medium Income-High Price\" = \"#8c62aa\", \"High Income-High Price\" = \"#3b4994\" )\n\nggplot(tracts_merged) + geom_sf(aes(fill = bivariate_cat), color = NA) + scale_fill_manual(values = bivariate_colors, name = \"Income vs Price\", guide = guide_legend(title.position = \"top\", ncol = 1)) + labs( title = \"Bivariate Choropleth Map of Property Values and Median Income\", subtitle = \"Census Tracts in Philadelphia (2023–2024)\", ) + theme_minimal() + theme( plot.title = element_text(size = 10, face = \"bold\"), legend.position = \"right\" )\n\n\n\n\n\n\n\n\n\n\nInterpretation:\nThis is a bivariate choropleth map of median home values and median income by census tract in Philadelphia. Median home values and median income were broken into tertiles. This shows that high-income, high-price areas are highly clustered in northwest Philadelphia, but also close to center city, university city, and in parts of the northeast. Low-income, low-price areas are found in the west and southwest, the north, and the northeast. These would indicate underfunded areas. The low-income, high price areas could represent areas that are quickly gentrifying. Low income residents here are at risked of getting pushed out of these neighborhoods."
  },
  {
    "objectID": "labs/midterm/Abraham_Knox_Levin_Appendix.html#price-per-bedroom",
    "href": "labs/midterm/Abraham_Knox_Levin_Appendix.html#price-per-bedroom",
    "title": "Philadelphia Housing Model - Technical Appendix",
    "section": "Price per Bedroom:",
    "text": "Price per Bedroom:\nThis measures to what extent a property becomes more valuable based on the number of bedrooms it has.\n\n\nCode\nres_properties_sf &lt;- res_properties_sf %&gt;%\n  mutate(\n    sale_price_n = as.numeric(sale_price_n),\n    number_of_bedrooms = as.numeric(number_of_bedrooms)\n  )\n\nres_properties_sf &lt;- res_properties_sf %&gt;% mutate( price_per_bedroom = sale_price_n/number_of_bedrooms)"
  },
  {
    "objectID": "labs/midterm/Abraham_Knox_Levin_Appendix.html#home-costs-relative-to-income",
    "href": "labs/midterm/Abraham_Knox_Levin_Appendix.html#home-costs-relative-to-income",
    "title": "Philadelphia Housing Model - Technical Appendix",
    "section": "Home Costs Relative to Income:",
    "text": "Home Costs Relative to Income:\nThis feature divides the sale price by the median household income of the census tract it is in. A lower ratio would indicate more affordable housing in the given tract, while a higher ratio would indicate more expensive housing.\n\n\nCode\nres_properties_sf &lt;- res_properties_sf %&gt;% mutate( price_to_income = sale_price_n / median_h_incomeE )"
  },
  {
    "objectID": "labs/midterm/Abraham_Knox_Levin_Appendix.html#affordability-measure",
    "href": "labs/midterm/Abraham_Knox_Levin_Appendix.html#affordability-measure",
    "title": "Philadelphia Housing Model - Technical Appendix",
    "section": "Affordability Measure:",
    "text": "Affordability Measure:\nThis feature divides the tract’s median household income by the sale price. A lower score would indicate the housing is more affordable, while a higher score would mean the property is less affordable.\n\n\nCode\nres_properties_sf &lt;- res_properties_sf %&gt;% mutate( affordability = median_h_incomeE / sale_price_n )"
  },
  {
    "objectID": "labs/midterm/Abraham_Knox_Levin_Appendix.html#access-index",
    "href": "labs/midterm/Abraham_Knox_Levin_Appendix.html#access-index",
    "title": "Philadelphia Housing Model - Technical Appendix",
    "section": "Access Index:",
    "text": "Access Index:\nThis feature creates one general score to indicate access to multiple valuable amenities including parks, hospitals, farmers markets, landmarks, and schools.A higher score indicates better access.\n\n\nCode\nres_properties_sf &lt;- res_properties_sf %&gt;% mutate( nearest_park_mi = nearest_park / 5280 )\n\nres_properties_sf &lt;- res_properties_sf %&gt;% mutate( access_index = ( 1 / nearest_park_mi) + (1 / nearest_hospital_mi) + (1 / nearest_fmarket_mi) + (1/nearest_landmark_mi) + (1/nearest_school_mi) )"
  },
  {
    "objectID": "labs/midterm/Abraham_Knox_Levin_Appendix.html#buffers",
    "href": "labs/midterm/Abraham_Knox_Levin_Appendix.html#buffers",
    "title": "Philadelphia Housing Model - Technical Appendix",
    "section": "Buffers:",
    "text": "Buffers:\nThese features use buffers to determine the number of amenities within a half mile buffer of each property. The amenities considered are again parks, schools, farmers markets, hospitals, and landmarks.\n\n\nCode\nproperty_buffers &lt;- st_buffer( res_properties_sf, dist = 0.5 * 5280 )\n\nres_properties_sf &lt;- res_properties_sf %&gt;% mutate( n_parks_near = lengths(st_intersects(property_buffers, park_properties)), n_schools_near = lengths(st_intersects(property_buffers, schools)), n_fmarkets_near = lengths(st_intersects(property_buffers, farmers_markets)), n_hospitals_near = lengths(st_intersects(property_buffers, hospitals)), n_landmarks_near = lengths(st_intersects(property_buffers, landmarks)) )"
  },
  {
    "objectID": "labs/midterm/Abraham_Knox_Levin_Appendix.html#summary-of-features",
    "href": "labs/midterm/Abraham_Knox_Levin_Appendix.html#summary-of-features",
    "title": "Philadelphia Housing Model - Technical Appendix",
    "section": "Summary of Features:",
    "text": "Summary of Features:\n\n\nCode\nres_properties_sf %&gt;%\n  st_drop_geometry() %&gt;%\n  select(price_per_bedroom, price_to_income, affordability, nearest_park_mi,\n         nearest_hospital_mi, nearest_fmarket_mi, nearest_landmark_mi,\n         nearest_school_mi, access_index, n_parks_near, n_schools_near,\n         n_fmarkets_near, n_hospitals_near, n_landmarks_near) %&gt;%\n  skim()\n\n\nWarning: There was 1 warning in `dplyr::summarize()`.\nℹ In argument: `dplyr::across(tidyselect::any_of(variable_names),\n  mangled_skimmers$funs)`.\nℹ In group 0: .\nCaused by warning:\n! There was 1 warning in `dplyr::summarize()`.\nℹ In argument: `dplyr::across(tidyselect::any_of(variable_names),\n  mangled_skimmers$funs)`.\nCaused by warning in `inline_hist()`:\n! Variable contains Inf or -Inf value(s) that were converted to NA.\n\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n27357\n\n\nNumber of columns\n14\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nnumeric\n14\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nprice_per_bedroom\n232\n0.99\nInf\nNaN\n1428.57\n53333.33\n86666.67\n140000.00\nInf\n▇▁▁▁▁\n\n\nprice_to_income\n316\n0.99\n5.47\n11.30\n0.09\n2.71\n3.88\n5.44\n283.08\n▇▁▁▁▁\n\n\naffordability\n316\n0.99\n0.34\n0.41\n0.00\n0.18\n0.26\n0.37\n11.07\n▇▁▁▁▁\n\n\nnearest_park_mi\n0\n1.00\n0.16\n0.12\n0.00\n0.07\n0.14\n0.22\n0.99\n▇▃▁▁▁\n\n\nnearest_hospital_mi\n0\n1.00\n0.99\n0.67\n0.01\n0.53\n0.84\n1.27\n4.90\n▇▅▁▁▁\n\n\nnearest_fmarket_mi\n0\n1.00\n1.35\n1.36\n0.01\n0.49\n0.92\n1.65\n7.48\n▇▂▁▁▁\n\n\nnearest_landmark_mi\n0\n1.00\n0.27\n0.16\n0.00\n0.15\n0.25\n0.37\n1.37\n▇▆▁▁▁\n\n\nnearest_school_mi\n0\n1.00\n0.22\n0.13\n0.01\n0.13\n0.20\n0.28\n1.09\n▇▅▁▁▁\n\n\naccess_index\n0\n1.00\n29.04\n24.82\n3.81\n16.48\n22.79\n33.08\n781.52\n▇▁▁▁▁\n\n\nn_parks_near\n0\n1.00\n5.43\n3.96\n0.00\n3.00\n5.00\n7.00\n27.00\n▇▃▁▁▁\n\n\nn_schools_near\n0\n1.00\n4.56\n2.94\n0.00\n2.00\n4.00\n6.00\n17.00\n▇▆▃▁▁\n\n\nn_fmarkets_near\n0\n1.00\n0.35\n0.70\n0.00\n0.00\n0.00\n1.00\n4.00\n▇▂▁▁▁\n\n\nn_hospitals_near\n0\n1.00\n0.31\n0.65\n0.00\n0.00\n0.00\n0.00\n4.00\n▇▂▁▁▁\n\n\nn_landmarks_near\n0\n1.00\n5.93\n10.43\n0.00\n1.00\n3.00\n5.00\n80.00\n▇▁▁▁▁"
  },
  {
    "objectID": "labs/midterm/Abraham_Knox_Levin_Appendix.html#further-data-cleaning",
    "href": "labs/midterm/Abraham_Knox_Levin_Appendix.html#further-data-cleaning",
    "title": "Philadelphia Housing Model - Technical Appendix",
    "section": "Further data cleaning",
    "text": "Further data cleaning\n\n\nCode\n# convert variables to numeric for later\n\nres_properties_sf &lt;- res_properties_sf %&gt;% \n  mutate(total_livable_area = as.numeric(total_livable_area), \n         number_of_bathrooms = as.numeric(number_of_bathrooms), \n         frontage = as.numeric(frontage),\n         fireplaces = as.numeric(fireplaces), \n         year_built = as.numeric(year_built) )\n\n#create categorical variables\nres_properties_sf$quality_grade &lt;- as.factor(res_properties_sf$quality_grade)\nres_properties_sf$category_code &lt;- as.factor(res_properties_sf$category_code)\n\n# log to reduce skew - compresses large values to make more symmetrical\n\nres_properties_sf &lt;- res_properties_sf %&gt;% mutate(log_price =\nlog(sale_price_n))"
  },
  {
    "objectID": "labs/midterm/Abraham_Knox_Levin_Appendix.html#creating-feature-sets",
    "href": "labs/midterm/Abraham_Knox_Levin_Appendix.html#creating-feature-sets",
    "title": "Philadelphia Housing Model - Technical Appendix",
    "section": "Creating Feature Sets",
    "text": "Creating Feature Sets\n\n\nCode\n#Structural features\n\nstructural_features &lt;-\nres_properties_sf %&gt;% select(log_price, number_of_bedrooms,\nnumber_of_bathrooms,total_livable_area)\n\n# census variables features\n\ncensus_features &lt;- res_properties_sf %&gt;% select(log_price,\nnumber_of_bedrooms, number_of_bathrooms,total_livable_area,\nmedian_h_incomeE, total_populationE)\n\n# spatial features\n\nspatial_features &lt;- res_properties_sf %&gt;% select(log_price,\nnumber_of_bedrooms, number_of_bathrooms,total_livable_area,\nmedian_h_incomeE, total_populationE, nearest_park_mi,\nnearest_hospital_mi, nearest_fmarket_mi, nearest_landmark_mi,\nnearest_school_mi, n_parks_near, n_schools_near, n_fmarkets_near,\nn_hospitals_near, n_landmarks_near, access_index)"
  },
  {
    "objectID": "labs/midterm/Abraham_Knox_Levin_Appendix.html#building-models",
    "href": "labs/midterm/Abraham_Knox_Levin_Appendix.html#building-models",
    "title": "Philadelphia Housing Model - Technical Appendix",
    "section": "Building Models",
    "text": "Building Models\n\n\nCode\n# structural model \nstructural_model &lt;- lm(log_price ~\nnumber_of_bedrooms + number_of_bathrooms + total_livable_area +\nfireplaces, data = res_properties_sf)\n\n# census model\n\ncensus_model &lt;- lm(log_price ~ number_of_bedrooms +\nnumber_of_bathrooms + total_livable_area + fireplaces +\nmedian_h_incomeE + total_populationE +price_to_income, data =\nres_properties_sf)\n\n# spatial model\n\nspatial_model &lt;- lm(log_price ~ number_of_bedrooms +\nnumber_of_bathrooms + total_livable_area + fireplaces +\nmedian_h_incomeE + total_populationE + price_to_income+\nnearest_park_mi + nearest_hospital_mi + nearest_fmarket_mi +\nnearest_landmark_mi + nearest_school_mi + n_parks_near +\nn_schools_near + n_fmarkets_near + n_hospitals_near + n_landmarks_near +\naccess_index, data = res_properties_sf)\n\n# fixed effects interaction model\n\nfixed_effects_interation_model &lt;- lm(log_price ~ number_of_bedrooms +\nnumber_of_bathrooms + total_livable_area * median_h_incomeE +\nyear_built*median_h_incomeE + fireplaces + total_populationE +\nprice_to_income+ nearest_park_mi + nearest_hospital_mi +\nnearest_fmarket_mi + nearest_landmark_mi + nearest_school_mi +\nn_parks_near + n_schools_near + n_fmarkets_near + n_hospitals_near +\nn_landmarks_near + access_index + category_code, data =\nres_properties_sf)\n\n\nWe built our each model with progressively more features in the following categories along with our hypotheses about their interaction with the dependent variable:\n\nStructural features: These features came from the property sales data, and thus each sale has a unique value for the following variables:\n\nNumber of bedrooms and bathrooms: Higher numbers tends to increase price\nTotal livable area: More livable area tends to increase price\nFireplaces: More fireplaces tends to be associated with luxury and thus price\n\nCensus features: These features come from the ACS and are aggregated at the tract level, so each sale may share values with other sales:\n\nMedian Household Income: Higher income areas more likely to afford higher priced properties\nTotal Population: Higher density areas could have more market competition and thus lower prices\nPrice to Income: Computed ratio of sale price to median income, approximating housing affordability\n\nSpatial features: These features were created by comparing city features to locations of property sales, so each sale has a unique value:\n\nNearest Park: A low number and thus a close park may increase property value\nNearest Hospital: A low number and thus close hospital may increase property value\nNearest Farmer’s Market: Another feature thats nearness may increase value\nNearest Landmark: Nearness to landmark could be desirable feature of high value property\nNearest School: Nearness to school may increase property value\nNumber of Parks Near: A higher number of parks within .5 mi may increase property value\nNumber of Hospitals Near: Higher number increase property value\nNumber of Landmarks Near: Higher number increase property value\nNumber of Farmer’s Markets Near: Higher number increase property value\nNumber of Schools Near: Higher number increase property value\nAccess Index: This incorporates all above features into one score where a higher number indicates higher access to many types of public features and thus may increase property value\n\nFixed Effects & Interaction terms:\n\nTotal Livable Area x Median Household Income: More space in a higher income area could increase property value even more than either variable alone\nYear Built x Median Household Income: An old home in a higher income area may indicate historically significant, high value property rather than ‘outdated’ and thus lower value\nCategory Code: 1 = Single Family Home, 2 = Multi-Family, 3 = “Mixed Use”. This fixed effect should represent the amount of space per household family member and also account for current cultural preferance for single family homes over shared spaces"
  },
  {
    "objectID": "labs/midterm/Abraham_Knox_Levin_Appendix.html#stargazer-output",
    "href": "labs/midterm/Abraham_Knox_Levin_Appendix.html#stargazer-output",
    "title": "Philadelphia Housing Model - Technical Appendix",
    "section": "Stargazer Output",
    "text": "Stargazer Output\n\n\nCode\nsuppressWarnings(\n  stargazer(\n    structural_model, census_model, spatial_model, fixed_effects_interation_model,\n    type = \"text\",\n    star.cutoffs = c(0.05, 0.01, 0.001),\n    title = \"Regression Models Comparison\"\n  )\n)\n\n\n\nRegression Models Comparison\n=========================================================================================================================================================\n                                                                                     Dependent variable:                                                 \n                                    ---------------------------------------------------------------------------------------------------------------------\n                                                                                          log_price                                                      \n                                                (1)                          (2)                           (3)                           (4)             \n---------------------------------------------------------------------------------------------------------------------------------------------------------\nnumber_of_bedrooms                           -0.119***                    -0.035***                     -0.018***                     -0.019***          \n                                              (0.005)                      (0.004)                       (0.004)                       (0.004)           \n                                                                                                                                                         \nnumber_of_bathrooms                           0.364***                     0.201***                     0.183***                      0.180***           \n                                              (0.007)                      (0.005)                       (0.005)                       (0.006)           \n                                                                                                                                                         \ntotal_livable_area                           0.0004***                    0.0002***                     0.0002***                     0.0004***          \n                                             (0.00001)                    (0.00001)                     (0.00001)                     (0.00001)          \n                                                                                                                                                         \nfireplaces                                    0.184***                      0.020                         0.020                       0.063***           \n                                              (0.016)                      (0.012)                       (0.011)                       (0.012)           \n                                                                                                                                                         \nmedian_h_incomeE                                                          0.00001***                   0.00001***                     0.0001***          \n                                                                          (0.00000)                     (0.00000)                     (0.00001)          \n                                                                                                                                                         \nyear_built                                                                                                                            0.004***           \n                                                                                                                                      (0.0003)           \n                                                                                                                                                         \ntotal_populationE                                                         0.00001***                   0.00001***                    0.00001***          \n                                                                          (0.00000)                     (0.00000)                     (0.00000)          \n                                                                                                                                                         \nprice_to_income                                                            0.034***                     0.034***                      0.034***           \n                                                                           (0.0003)                     (0.0003)                      (0.0003)           \n                                                                                                                                                         \nnearest_park_mi                                                                                         0.236***                      0.186***           \n                                                                                                         (0.033)                       (0.033)           \n                                                                                                                                                         \nnearest_hospital_mi                                                                                       0.011                         0.012            \n                                                                                                         (0.007)                       (0.007)           \n                                                                                                                                                         \nnearest_fmarket_mi                                                                                      0.037***                      0.027***           \n                                                                                                         (0.003)                       (0.003)           \n                                                                                                                                                         \nnearest_landmark_mi                                                                                     0.097***                      0.097***           \n                                                                                                         (0.025)                       (0.024)           \n                                                                                                                                                         \nnearest_school_mi                                                                                       0.137***                       0.097**           \n                                                                                                         (0.030)                       (0.030)           \n                                                                                                                                                         \nn_parks_near                                                                                              0.002                         0.002            \n                                                                                                         (0.001)                       (0.001)           \n                                                                                                                                                         \nn_schools_near                                                                                          -0.016***                     -0.013***          \n                                                                                                         (0.001)                       (0.001)           \n                                                                                                                                                         \nn_fmarkets_near                                                                                         0.089***                      0.084***           \n                                                                                                         (0.006)                       (0.006)           \n                                                                                                                                                         \nn_hospitals_near                                                                                        0.093***                      0.087***           \n                                                                                                         (0.006)                       (0.006)           \n                                                                                                                                                         \nn_landmarks_near                                                                                        0.002***                      0.002***           \n                                                                                                        (0.0004)                      (0.0004)           \n                                                                                                                                                         \naccess_index                                                                                             0.0001                        0.00003           \n                                                                                                        (0.0002)                      (0.0002)           \n                                                                                                                                                         \ncategory_code2                                                                                                                        -0.058***          \n                                                                                                                                       (0.013)           \n                                                                                                                                                         \ncategory_code3                                                                                                                          0.095            \n                                                                                                                                       (0.361)           \n                                                                                                                                                         \ntotal_livable_area:median_h_incomeE                                                                                                   -0.000***          \n                                                                                                                                       (0.000)           \n                                                                                                                                                         \nmedian_h_incomeE:year_built                                                                                                          -0.00000***         \n                                                                                                                                       (0.000)           \n                                                                                                                                                         \nConstant                                     11.593***                    10.648***                     10.517***                     2.042***           \n                                              (0.015)                      (0.017)                       (0.024)                       (0.502)           \n                                                                                                                                                         \n---------------------------------------------------------------------------------------------------------------------------------------------------------\nObservations                                   25,924                       25,624                       25,624                        25,624            \nR2                                             0.241                        0.608                         0.624                         0.631            \nAdjusted R2                                    0.241                        0.608                         0.624                         0.631            \nResidual Std. Error                      0.735 (df = 25919)           0.526 (df = 25616)           0.516 (df = 25605)            0.511 (df = 25600)      \nF Statistic                         2,061.536*** (df = 4; 25919) 5,677.463*** (df = 7; 25616) 2,358.788*** (df = 18; 25605) 1,906.509*** (df = 23; 25600)\n=========================================================================================================================================================\nNote:                                                                                                                       *p&lt;0.05; **p&lt;0.01; ***p&lt;0.001\n\n\nThe Stargazer output sheds some light on the most important variables:\n\nPositive Coefficients: An increase in units of these is associated with an increase in property sale value to a very high degree of confidence (p-value of less than 2e-16):\n\nnumber_of_bathrooms\ntotal_livable_area\nmedian_h_incomeE\nyear_built\nprice_to_income\nnearest_fmarket_mi (although here a high value is associated with farther distance from a farmer’s market)\nn_fmarkets_near (oddly, seeing as farther distance form farmer’s marker is modeled as depressing value, here higher number of close farmer’s markets is positively associated with value)\nn_hospitals_near\n\nNegative Coefficients: An increase in units of these is associated with a decrease in property sale value to a very high degree of confidence (p-value of less than 2e-16):\n\nn_schools_near\ncategory_code2 (multi-family housing as compared to single family housing depressed property sale value)\ntotal_livable_area*median_h_incomeE\nmedian_h_incomeE*year_built"
  }
]